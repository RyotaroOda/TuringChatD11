{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onRoomUpdate, getRoomData } from \"../services/firebase-realtime-database.ts\";\nimport { requestMatch, cancelMatch } from \"../services/firebase-functions-client.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\n\nimport { AIModel } from \"../shared/types.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeView = () => {\n  _s();\n  const [score, setScore] = useState(9999);\n  const [aiPrompt, setAiPrompt] = useState(\"Input AI prompt here\");\n  const [roomId, setRoomId] = useState(null); // ルームID\n  const [playerName, setPlayerName] = useState(\"\"); // プレイヤーネームを保持\n  const [playerId, setPlayerId] = useState(\"\"); // プレイヤーID\n\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth(); // useAuthフックで認証状態を取得\n\n  //#region ログイン状態\n  useEffect(() => {\n    if (user) {\n      setPlayerId(user.uid); // プレイヤーIDを設定\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n  //#endregion\n\n  //#region プレイヤーネーム\n  const [isEditingName, setIsEditingName] = useState(false); // 名前編集モード\n  const [newName, setNewName] = useState(\"\"); // 新しい名前\n  // ユーザー情報が変わるたびにプレイヤーネームを更新\n  useEffect(() => {\n    if (user) {\n      const displayName = user.displayName || (user.isAnonymous ? \"ゲスト\" : user.email || \"\");\n      setPlayerName(displayName); // 既存のプレイヤーネームを設定\n      setNewName(displayName); // 名前編集用のテキストフィールドにも設定\n    }\n  }, [user]);\n\n  // 名前変更ボタンを押した時の処理\n  const handleNameChangeClick = () => {\n    setIsEditingName(!isEditingName); // 編集モードのオン/オフを切り替え\n  };\n\n  // 名前を更新する処理\n  const handleNameSubmit = async () => {\n    if (user && newName) {\n      try {\n        //FIXME - updateProfile関数の実装が必要\n        // await updateProfile(user, { displayName: newName }); // Firebaseで名前を更新\n        setPlayerName(newName); // 画面上の名前を更新\n        setIsEditingName(false); // 編集モードを終了\n      } catch (error) {\n        console.error(\"名前の更新に失敗しました:\", error);\n      }\n    }\n  };\n\n  //#endregion\n\n  //#region マッチング\n  const [isMatching, setIsMatching] = useState(false);\n  // マッチング開始処理\n  const startMatch = async () => {\n    try {\n      const player = {\n        id: playerId,\n        // プレイヤーID\n        name: playerName,\n        rating: score,\n        bot: {\n          prompt: aiPrompt,\n          model: AIModel.default\n        }\n      };\n      const result = await requestMatch(player); // サーバーレス関数でマッチングリクエスト\n      if (result.roomId) {\n        setRoomId(result.roomId); // ルームIDを保存\n        if (result.startBattle) {\n          //バトル開始\n          const roomData = getRoomData(result.roomId);\n          navigate(`/battle/${roomId}`, {\n            state: {\n              roomData: roomData\n            }\n          });\n        } else {\n          //ホスト\n          setIsMatching(true); // マッチング状態を設定\n        }\n      } else {\n        console.error(\"マッチングエラー1\");\n        setIsMatching(false);\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー2:\", error);\n      setIsMatching(false); // エラー発生時にマッチング状態を解除\n    }\n  };\n\n  // マッチングキャンセル処理\n  const handleCancelMatch = async () => {\n    setIsMatching(false); // マッチング状態を解除\n    setRoomId(null); // ルームIDをクリア\n    try {\n      const result = await cancelMatch(); // サーバーレス関数でキャンセル\n      console.log(result.message);\n    } catch (error) {\n      console.error(\"キャンセルエラー:\", error);\n    }\n  };\n\n  //ルーム監視\n  useEffect(() => {\n    if (isMatching && roomId) {\n      // ルームIDが設定されている場合、ルームのデータを監視\n      onRoomUpdate(roomId, roomData => {\n        if (roomData && roomData.player2) {\n          // player2が設定されたらマッチング成立とみなす\n          console.log(\"Match found with opponent:\", roomData.player2);\n          navigate(`/battle/${roomId}`, {\n            state: {\n              matchData: roomData,\n              myData: {\n                playerName\n              }\n            }\n          });\n        } else if (!roomData) {\n          // ルームが削除された場合\n          console.error(\"ルームが削除されました。マッチングがキャンセルされた可能性があります。\");\n          cancelMatch(); // マッチングをキャンセル\n          setIsMatching(false);\n          alert(\"マッチングがキャンセルされました。\");\n        }\n      });\n    }\n  }, [roomId, navigate, playerName, isMatching]);\n\n  // 画面が閉じられるかリロードされた場合にマッチングをキャンセル\n  useEffect(() => {\n    const handleBeforeUnload = async event => {\n      if (isMatching) {\n        await cancelMatch(); // マッチングが進行中ならキャンセル\n        event.preventDefault();\n        event.returnValue = \"\"; // ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n      }\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n  //#endregion\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30DB\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!user.isAnonymous && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u3053\\u3093\\u306B\\u3061\\u306F\\u3001\", playerName, \"\\u3055\\u3093\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNameChangeClick,\n          children: isEditingName ? \"キャンセル\" : \"名前変更\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), isEditingName && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newName,\n            onChange: e => setNewName(e.target.value) // テキストフィールドの値を更新\n            ,\n            placeholder: \"\\u65B0\\u3057\\u3044\\u540D\\u524D\\u3092\\u5165\\u529B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNameSubmit,\n            children: \"\\u540D\\u524D\\u3092\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), user && !user.isAnonymous ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PlayerName: \\u30B2\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"AI\\u30D7\\u30ED\\u30F3\\u30D7\\u30C8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: aiPrompt,\n          onChange: e => setAiPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), isMatching ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancelMatch,\n      children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this) // マッチングキャンセルボタン\n    : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startMatch,\n      children: \"Start Matching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this) // マッチング開始ボタン\n    , isMatching ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Matching ...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeView, \"31r2ZahKvVTDictkJ1YHmCYJMvo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = HomeView;\nexport default HomeView;\nvar _c;\n$RefreshReg$(_c, \"HomeView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","onRoomUpdate","getRoomData","requestMatch","cancelMatch","useAuth","signOut","auth","AIModel","jsxDEV","_jsxDEV","HomeView","_s","score","setScore","aiPrompt","setAiPrompt","roomId","setRoomId","playerName","setPlayerName","playerId","setPlayerId","navigate","user","uid","isAnonymous","displayName","email","handleLogout","alert","error","console","isEditingName","setIsEditingName","newName","setNewName","handleNameChangeClick","handleNameSubmit","isMatching","setIsMatching","startMatch","player","id","name","rating","bot","prompt","model","default","result","startBattle","roomData","state","handleCancelMatch","log","message","player2","matchData","myData","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  onRoomUpdate,\n  getRoomData,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  requestMatch,\n  cancelMatch,\n} from \"../services/firebase-functions-client.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\n\nimport { AIModel, PlayerData } from \"../shared/types.ts\";\n\nconst HomeView: React.FC = () => {\n  const [score, setScore] = useState<number>(9999);\n  const [aiPrompt, setAiPrompt] = useState<string>(\"Input AI prompt here\");\n  const [roomId, setRoomId] = useState<string | null>(null); // ルームID\n  const [playerName, setPlayerName] = useState<string>(\"\"); // プレイヤーネームを保持\n  const [playerId, setPlayerId] = useState<string>(\"\"); // プレイヤーID\n\n  const navigate = useNavigate();\n  const { user } = useAuth(); // useAuthフックで認証状態を取得\n\n  //#region ログイン状態\n  useEffect(() => {\n    if (user) {\n      setPlayerId(user.uid); // プレイヤーIDを設定\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n  //#endregion\n\n  //#region プレイヤーネーム\n  const [isEditingName, setIsEditingName] = useState<boolean>(false); // 名前編集モード\n  const [newName, setNewName] = useState<string>(\"\"); // 新しい名前\n  // ユーザー情報が変わるたびにプレイヤーネームを更新\n  useEffect(() => {\n    if (user) {\n      const displayName =\n        user.displayName || (user.isAnonymous ? \"ゲスト\" : user.email || \"\");\n      setPlayerName(displayName); // 既存のプレイヤーネームを設定\n      setNewName(displayName); // 名前編集用のテキストフィールドにも設定\n    }\n  }, [user]);\n\n  // 名前変更ボタンを押した時の処理\n  const handleNameChangeClick = () => {\n    setIsEditingName(!isEditingName); // 編集モードのオン/オフを切り替え\n  };\n\n  // 名前を更新する処理\n  const handleNameSubmit = async () => {\n    if (user && newName) {\n      try {\n        //FIXME - updateProfile関数の実装が必要\n        // await updateProfile(user, { displayName: newName }); // Firebaseで名前を更新\n        setPlayerName(newName); // 画面上の名前を更新\n        setIsEditingName(false); // 編集モードを終了\n      } catch (error) {\n        console.error(\"名前の更新に失敗しました:\", error);\n      }\n    }\n  };\n\n  //#endregion\n\n  //#region マッチング\n  const [isMatching, setIsMatching] = useState<boolean>(false);\n  // マッチング開始処理\n  const startMatch = async () => {\n    try {\n      const player: PlayerData = {\n        id: playerId, // プレイヤーID\n        name: playerName,\n        rating: score,\n        bot: { prompt: aiPrompt, model: AIModel.default },\n      };\n      const result = await requestMatch(player); // サーバーレス関数でマッチングリクエスト\n      if (result.roomId) {\n        setRoomId(result.roomId); // ルームIDを保存\n        if (result.startBattle) {\n          //バトル開始\n          const roomData = getRoomData(result.roomId);\n          navigate(`/battle/${roomId}`, {\n            state: { roomData: roomData },\n          });\n        } else {\n          //ホスト\n          setIsMatching(true); // マッチング状態を設定\n        }\n      } else {\n        console.error(\"マッチングエラー1\");\n        setIsMatching(false);\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー2:\", error);\n      setIsMatching(false); // エラー発生時にマッチング状態を解除\n    }\n  };\n\n  // マッチングキャンセル処理\n  const handleCancelMatch = async () => {\n    setIsMatching(false); // マッチング状態を解除\n    setRoomId(null); // ルームIDをクリア\n    try {\n      const result = await cancelMatch(); // サーバーレス関数でキャンセル\n      console.log(result.message);\n    } catch (error) {\n      console.error(\"キャンセルエラー:\", error);\n    }\n  };\n\n  //ルーム監視\n  useEffect(() => {\n    if (isMatching && roomId) {\n      // ルームIDが設定されている場合、ルームのデータを監視\n      onRoomUpdate(roomId, (roomData) => {\n        if (roomData && roomData.player2) {\n          // player2が設定されたらマッチング成立とみなす\n          console.log(\"Match found with opponent:\", roomData.player2);\n          navigate(`/battle/${roomId}`, {\n            state: { matchData: roomData, myData: { playerName } },\n          });\n        } else if (!roomData) {\n          // ルームが削除された場合\n          console.error(\n            \"ルームが削除されました。マッチングがキャンセルされた可能性があります。\"\n          );\n          cancelMatch(); // マッチングをキャンセル\n          setIsMatching(false);\n          alert(\"マッチングがキャンセルされました。\");\n        }\n      });\n    }\n  }, [roomId, navigate, playerName, isMatching]);\n\n  // 画面が閉じられるかリロードされた場合にマッチングをキャンセル\n  useEffect(() => {\n    const handleBeforeUnload = async (event: BeforeUnloadEvent) => {\n      if (isMatching) {\n        await cancelMatch(); // マッチングが進行中ならキャンセル\n        event.preventDefault();\n        event.returnValue = \"\"; // ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n  //#endregion\n\n  return (\n    <div>\n      <h1>ホーム</h1>\n      {user ? (\n        <div>\n          {/* ゲストユーザー（匿名）ではない場合に名前を表示 */}\n          {!user.isAnonymous && (\n            <div>\n              <p>こんにちは、{playerName}さん</p>\n              <button onClick={handleNameChangeClick}>\n                {isEditingName ? \"キャンセル\" : \"名前変更\"}\n              </button>\n\n              {/* 名前編集モード時にのみテキストフィールドを表示 */}\n              {isEditingName && (\n                <div>\n                  <input\n                    type=\"text\"\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)} // テキストフィールドの値を更新\n                    placeholder=\"新しい名前を入力\"\n                  />\n                  <button onClick={handleNameSubmit}>名前を保存</button>\n                </div>\n              )}\n            </div>\n          )}\n          <button onClick={handleLogout}>ログアウト</button>\n        </div>\n      ) : (\n        <div>\n          <button onClick={() => navigate(\"/login\")}>ログイン</button>{\" \"}\n          {/* ログインボタン */}\n        </div>\n      )}\n\n      {/* プレイヤーネームの入力はログイン済みユーザーのみ表示 */}\n      {user && !user.isAnonymous ? null : (\n        <div>\n          <p>PlayerName: ゲスト</p>\n        </div>\n      )}\n\n      <p>Score: {score}</p>\n      <div>\n        <label>\n          AIプロンプト:\n          <input\n            type=\"text\"\n            value={aiPrompt}\n            onChange={(e) => setAiPrompt(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {/* マッチング中にキャンセルボタンを表示 */}\n      {isMatching ? (\n        <button onClick={handleCancelMatch}>キャンセル</button> // マッチングキャンセルボタン\n      ) : (\n        <button onClick={startMatch}>Start Matching</button> // マッチング開始ボタン\n      )}\n      {isMatching ? <p>\"Matching ...\"</p> : <p></p>}\n    </div>\n  );\n};\n\nexport default HomeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}