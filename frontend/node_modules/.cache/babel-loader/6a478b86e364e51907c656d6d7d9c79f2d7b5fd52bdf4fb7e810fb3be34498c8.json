{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoomData, onRoomPlayersAdded } from \"../services/firebase-realtime-database.ts\";\nimport { requestMatch, cancelRequest } from \"../services/firebase-functions-client.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut, updateProfile } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\n\nimport { AIModel } from \"shared/dist/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeView = () => {\n  _s();\n  const [score, setScore] = useState(9999);\n  const [aiPrompt, setAiPrompt] = useState(\"Input AI prompt here\");\n  const [roomId, setRoomId] = useState(null); // ルームID\n  const [playerName, setPlayerName] = useState(\"\"); // プレイヤーネームを保持\n  const [playerId, setPlayerId] = useState(\"\"); // プレイヤーID\n\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth(); // useAuthフックで認証状態を取得\n\n  //#region ログイン状態\n  useEffect(() => {\n    if (user) {\n      setPlayerId(user.uid); // プレイヤーIDを設定\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n  //#endregion\n\n  //#region プレイヤーネーム\n  const [isEditingName, setIsEditingName] = useState(false); // 名前編集モード\n  const [newName, setNewName] = useState(\"\"); // 新しい名前\n  // ユーザー情報が変わるたびにプレイヤーネームを更新\n  useEffect(() => {\n    if (user) {\n      const displayName = user.displayName || (user.isAnonymous ? \"ゲスト\" : user.email || \"\");\n      setPlayerName(displayName); // 既存のプレイヤーネームを設定\n      setNewName(displayName); // 名前編集用のテキストフィールドにも設定\n    }\n  }, [user]);\n\n  // 名前変更ボタンを押した時の処理\n  const handleNameChangeClick = () => {\n    setIsEditingName(!isEditingName); // 編集モードのオン/オフを切り替え\n  };\n\n  // 名前を更新する処理\n  const handleNameSubmit = async () => {\n    if (user && newName) {\n      try {\n        await updateProfile(user, {\n          displayName: newName\n        }); // FirebaseAuthで名前を更新\n        setPlayerName(newName); // 画面上の名前を更新\n        setIsEditingName(false); // 編集モードを終了\n      } catch (error) {\n        console.error(\"名前の更新に失敗しました:\", error);\n      }\n    }\n  };\n\n  //#endregion\n\n  //#region マッチング\n  const [isMatching, setIsMatching] = useState(false);\n  // マッチング開始処理\n  let match;\n  const startMatch = async () => {\n    try {\n      const player = {\n        id: playerId,\n        // プレイヤーID\n        name: playerName,\n        rating: score,\n        bot: {\n          prompt: aiPrompt,\n          model: AIModel.default\n        }\n      };\n      const result = await requestMatch(player); // サーバーレス関数でマッチングリクエスト\n      match = result;\n      console.log(\"result\", result);\n      if (result.roomId !== \"\") {\n        const id = result.roomId;\n        console.log(\"Id\", id);\n        await setRoomId(id); // ルームIDを保存\n        console.log(\"roomId\", roomId);\n        console.log(\"match\", match);\n        setRoomId(match[\"roomId\"]); // ルームIDを保存\n        console.log(\"roomId\", roomId);\n        if (result.startBattle) {\n          toBattleViewSegue(); // バトル画面に遷移\n        } else {\n          //ホスト\n          setIsMatching(true); // マッチング状態を設定\n        }\n      } else {\n        console.error(\"マッチングエラー\", result.message);\n        cancelMatching();\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー:\", error);\n      cancelMatching(); // エラー発生時にマッチング状態を解除\n    }\n  };\n  useEffect(() => {\n    console.log(\"ue\", roomId); // 更新後のroomIdの値を確認\n  }, [roomId]);\n\n  // マッチングキャンセル処理\n  const cancelMatching = async () => {\n    setIsMatching(false); // マッチング状態を解除\n    setRoomId(null); // ルームIDをクリア\n    try {\n      await cancelRequest(); // サーバーレス関数でキャンセル\n    } catch (error) {\n      console.error(\"キャンセルエラー:\", error);\n    }\n  };\n\n  //ルーム監視\n  useEffect(() => {\n    if (isMatching && roomId) {\n      // ルームIDが設定されている場合、ルームのデータを監視\n      const unsubscribe = onRoomPlayersAdded(roomId, players => {\n        console.log(\"players updated:\", players);\n        // player2が設定されたらマッチング成立とみなす\n        if ((players === null || players === void 0 ? void 0 : players.length) === 2) {\n          toBattleViewSegue(); // バトル画面に遷移\n        }\n      }, {\n        current: !isMatching\n      });\n      return () => {\n        console.log(\"esc\");\n        unsubscribe();\n      };\n    }\n  }, [roomId, navigate, playerName, isMatching]);\n\n  // 画面が閉じられるかリロードされた場合にマッチングをキャンセル\n  useEffect(() => {\n    const handleBeforeUnload = async event => {\n      if (isMatching) {\n        cancelMatching();\n        event.preventDefault();\n        event.returnValue = \"\"; // ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n      }\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n  //#endregion\n\n  const toBattleViewSegue = () => {\n    console.log(\"roomId\", roomId);\n    if (roomId) {\n      setIsMatching(false); // マッチング状態を解除\n      console.log(\"roomId\", roomId);\n      getRoomData(roomId).then(roomData => {\n        if (roomData) {\n          console.log(\"roomData\", roomData);\n          if (roomData.status === \"playing\") {\n            navigate(`/battle/${roomId}`, {\n              state: {\n                roomData: roomData\n              }\n            });\n          } else {\n            console.error(\"ルームがプレイ中ではありません\");\n            cancelMatching();\n          }\n        } else {\n          console.error(\"ルームデータが取得できません\");\n          cancelMatching();\n        }\n      });\n    } else {\n      console.error(\"roomIdが取得できません\");\n      cancelMatching();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30DB\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!user.isAnonymous && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u3053\\u3093\\u306B\\u3061\\u306F\\u3001\", playerName, \"\\u3055\\u3093\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNameChangeClick,\n          children: isEditingName ? \"キャンセル\" : \"名前変更\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), isEditingName && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newName,\n            onChange: e => setNewName(e.target.value) // テキストフィールドの値を更新\n            ,\n            placeholder: \"\\u65B0\\u3057\\u3044\\u540D\\u524D\\u3092\\u5165\\u529B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNameSubmit,\n            children: \"\\u540D\\u524D\\u3092\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), user && !user.isAnonymous ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PlayerName: \\u30B2\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"AI\\u30D7\\u30ED\\u30F3\\u30D7\\u30C8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: aiPrompt,\n          onChange: e => setAiPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), isMatching ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cancelMatching,\n      children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this) // マッチングキャンセルボタン\n    : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startMatch,\n      children: \"Start Matching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this) // マッチング開始ボタン\n    , isMatching ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Matching ...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeView, \"MY6egSeia6q4silJjm5uHlC7RIg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = HomeView;\nexport default HomeView;\nvar _c;\n$RefreshReg$(_c, \"HomeView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getRoomData","onRoomPlayersAdded","requestMatch","cancelRequest","useAuth","signOut","updateProfile","auth","AIModel","jsxDEV","_jsxDEV","HomeView","_s","score","setScore","aiPrompt","setAiPrompt","roomId","setRoomId","playerName","setPlayerName","playerId","setPlayerId","navigate","user","uid","isAnonymous","displayName","email","handleLogout","alert","error","console","isEditingName","setIsEditingName","newName","setNewName","handleNameChangeClick","handleNameSubmit","isMatching","setIsMatching","match","startMatch","player","id","name","rating","bot","prompt","model","default","result","log","startBattle","toBattleViewSegue","message","cancelMatching","unsubscribe","players","length","current","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","then","roomData","status","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  getRoomData,\n  onRoomPlayersAdded,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  requestMatch,\n  cancelRequest,\n} from \"../services/firebase-functions-client.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut, updateProfile } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\n\nimport { AIModel, MatchResult, PlayerData, RoomData } from \"shared/dist/types\";\nimport e from \"cors\";\nimport { log } from \"console\";\nimport { set } from \"firebase/database\";\n\nconst HomeView: React.FC = () => {\n  const [score, setScore] = useState<number>(9999);\n  const [aiPrompt, setAiPrompt] = useState<string>(\"Input AI prompt here\");\n  const [roomId, setRoomId] = useState<string | null>(null); // ルームID\n  const [playerName, setPlayerName] = useState<string>(\"\"); // プレイヤーネームを保持\n  const [playerId, setPlayerId] = useState<string>(\"\"); // プレイヤーID\n\n  const navigate = useNavigate();\n  const { user } = useAuth(); // useAuthフックで認証状態を取得\n\n  //#region ログイン状態\n  useEffect(() => {\n    if (user) {\n      setPlayerId(user.uid); // プレイヤーIDを設定\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n  //#endregion\n\n  //#region プレイヤーネーム\n  const [isEditingName, setIsEditingName] = useState<boolean>(false); // 名前編集モード\n  const [newName, setNewName] = useState<string>(\"\"); // 新しい名前\n  // ユーザー情報が変わるたびにプレイヤーネームを更新\n  useEffect(() => {\n    if (user) {\n      const displayName =\n        user.displayName || (user.isAnonymous ? \"ゲスト\" : user.email || \"\");\n      setPlayerName(displayName); // 既存のプレイヤーネームを設定\n      setNewName(displayName); // 名前編集用のテキストフィールドにも設定\n    }\n  }, [user]);\n\n  // 名前変更ボタンを押した時の処理\n  const handleNameChangeClick = () => {\n    setIsEditingName(!isEditingName); // 編集モードのオン/オフを切り替え\n  };\n\n  // 名前を更新する処理\n  const handleNameSubmit = async () => {\n    if (user && newName) {\n      try {\n        await updateProfile(user, { displayName: newName }); // FirebaseAuthで名前を更新\n        setPlayerName(newName); // 画面上の名前を更新\n        setIsEditingName(false); // 編集モードを終了\n      } catch (error) {\n        console.error(\"名前の更新に失敗しました:\", error);\n      }\n    }\n  };\n\n  //#endregion\n\n  //#region マッチング\n  const [isMatching, setIsMatching] = useState<boolean>(false);\n  // マッチング開始処理\n  let match: MatchResult;\n\n  const startMatch = async () => {\n    try {\n      const player: PlayerData = {\n        id: playerId, // プレイヤーID\n        name: playerName,\n        rating: score,\n        bot: { prompt: aiPrompt, model: AIModel.default },\n      };\n      const result = await requestMatch(player); // サーバーレス関数でマッチングリクエスト\n      match = result;\n      console.log(\"result\", result);\n      if (result.roomId !== \"\") {\n        const id = result.roomId;\n        console.log(\"Id\", id);\n        await setRoomId(id); // ルームIDを保存\n        console.log(\"roomId\", roomId);\n        console.log(\"match\", match);\n        setRoomId(match[\"roomId\"]); // ルームIDを保存\n        console.log(\"roomId\", roomId);\n        if (result.startBattle) {\n          toBattleViewSegue(); // バトル画面に遷移\n        } else {\n          //ホスト\n          setIsMatching(true); // マッチング状態を設定\n        }\n      } else {\n        console.error(\"マッチングエラー\", result.message);\n        cancelMatching();\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー:\", error);\n      cancelMatching(); // エラー発生時にマッチング状態を解除\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"ue\", roomId); // 更新後のroomIdの値を確認\n  }, [roomId]);\n\n  // マッチングキャンセル処理\n  const cancelMatching = async () => {\n    setIsMatching(false); // マッチング状態を解除\n    setRoomId(null); // ルームIDをクリア\n    try {\n      await cancelRequest(); // サーバーレス関数でキャンセル\n    } catch (error) {\n      console.error(\"キャンセルエラー:\", error);\n    }\n  };\n\n  //ルーム監視\n  useEffect(() => {\n    if (isMatching && roomId) {\n      // ルームIDが設定されている場合、ルームのデータを監視\n      const unsubscribe = onRoomPlayersAdded(\n        roomId,\n        (players) => {\n          console.log(\"players updated:\", players);\n          // player2が設定されたらマッチング成立とみなす\n          if (players?.length === 2) {\n            toBattleViewSegue(); // バトル画面に遷移\n          }\n        },\n        { current: !isMatching }\n      );\n      return () => {\n        console.log(\"esc\");\n        unsubscribe();\n      };\n    }\n  }, [roomId, navigate, playerName, isMatching]);\n\n  // 画面が閉じられるかリロードされた場合にマッチングをキャンセル\n  useEffect(() => {\n    const handleBeforeUnload = async (event: BeforeUnloadEvent) => {\n      if (isMatching) {\n        cancelMatching();\n        event.preventDefault();\n        event.returnValue = \"\"; // ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n  //#endregion\n\n  const toBattleViewSegue = () => {\n    console.log(\"roomId\", roomId);\n    if (roomId) {\n      setIsMatching(false); // マッチング状態を解除\n      console.log(\"roomId\", roomId);\n      getRoomData(roomId).then((roomData) => {\n        if (roomData) {\n          console.log(\"roomData\", roomData);\n          if (roomData.status === \"playing\") {\n            navigate(`/battle/${roomId}`, {\n              state: { roomData: roomData },\n            });\n          } else {\n            console.error(\"ルームがプレイ中ではありません\");\n            cancelMatching();\n          }\n        } else {\n          console.error(\"ルームデータが取得できません\");\n          cancelMatching();\n        }\n      });\n    } else {\n      console.error(\"roomIdが取得できません\");\n      cancelMatching();\n    }\n  };\n\n  return (\n    <div>\n      <h1>ホーム</h1>\n      {user ? (\n        <div>\n          {/* ゲストユーザー（匿名）ではない場合に名前を表示 */}\n          {!user.isAnonymous && (\n            <div>\n              <p>こんにちは、{playerName}さん</p>\n              <button onClick={handleNameChangeClick}>\n                {isEditingName ? \"キャンセル\" : \"名前変更\"}\n              </button>\n\n              {/* 名前編集モード時にのみテキストフィールドを表示 */}\n              {isEditingName && (\n                <div>\n                  <input\n                    type=\"text\"\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)} // テキストフィールドの値を更新\n                    placeholder=\"新しい名前を入力\"\n                  />\n                  <button onClick={handleNameSubmit}>名前を保存</button>\n                </div>\n              )}\n            </div>\n          )}\n          <button onClick={handleLogout}>ログアウト</button>\n        </div>\n      ) : (\n        <div>\n          <button onClick={() => navigate(\"/login\")}>ログイン</button>{\" \"}\n          {/* ログインボタン */}\n        </div>\n      )}\n\n      {/* プレイヤーネームの入力はログイン済みユーザーのみ表示 */}\n      {user && !user.isAnonymous ? null : (\n        <div>\n          <p>PlayerName: ゲスト</p>\n        </div>\n      )}\n\n      <p>Score: {score}</p>\n      <div>\n        <label>\n          AIプロンプト:\n          <input\n            type=\"text\"\n            value={aiPrompt}\n            onChange={(e) => setAiPrompt(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {/* マッチング中にキャンセルボタンを表示 */}\n      {isMatching ? (\n        <button onClick={cancelMatching}>キャンセル</button> // マッチングキャンセルボタン\n      ) : (\n        <button onClick={startMatch}>Start Matching</button> // マッチング開始ボタン\n      )}\n      {isMatching ? <p>\"Matching ...\"</p> : <p></p>}\n    </div>\n  );\n};\n\nexport default HomeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}