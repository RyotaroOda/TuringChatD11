{"ast":null,"code":"// services/firebase-functions-client.ts\nimport{httpsCallable}from\"firebase/functions\";import{auth,funcs}from\"./firebase_f.ts\";// Firebase初期化ファイルをインポート\n// マッチングリクエストの結果の型定義\n// サーバーレス関数を使ってマッチングリクエストを送信する関数\nexport const requestMatch=async rating=>{const user=auth.currentUser;if(!user){throw new Error(\"ログインしていないユーザーです。\");}const requestMatchFunction=httpsCallable(funcs,'requestMatchFunction');const result=await requestMatchFunction({rating});// 型アサーションを使ってunknown型からMatchResult型にキャスト\nreturn result.data;};// キャンセルリクエストの結果の型定義\n// サーバーレス関数を使ってマッチングキャンセルを行う関数\nexport const cancelMatch=async()=>{const user=auth.currentUser;if(!user){throw new Error(\"ログインしていないユーザーです。\");}const cancelMatchFunction=httpsCallable(funcs,'cancelMatchFunction');const result=await cancelMatchFunction();// 型アサーションを使ってunknown型からCancelResult型にキャスト\nreturn result.data;};","map":{"version":3,"names":["httpsCallable","auth","funcs","requestMatch","rating","user","currentUser","Error","requestMatchFunction","result","data","cancelMatch","cancelMatchFunction"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/services/firebase-functions_f.ts"],"sourcesContent":["// services/firebase-functions-client.ts\nimport { httpsCallable } from \"firebase/functions\";\nimport { auth, funcs } from \"./firebase_f.ts\"; // Firebase初期化ファイルをインポート\n\n// マッチングリクエストの結果の型定義\ninterface MatchResult {\n    roomId?: string;\n    opponentId?: string;\n    message?: string;\n  }\n\n  // サーバーレス関数を使ってマッチングリクエストを送信する関数\n  export const requestMatch = async (rating: number): Promise<MatchResult> => {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error(\"ログインしていないユーザーです。\");\n    }\n  \n    const requestMatchFunction = httpsCallable(funcs, 'requestMatchFunction');\n    const result = await requestMatchFunction({ rating });\n    \n    // 型アサーションを使ってunknown型からMatchResult型にキャスト\n    return result.data as MatchResult;\n  };\n  \n  // キャンセルリクエストの結果の型定義\n  interface CancelResult {\n    message: string;\n  }\n  \n  // サーバーレス関数を使ってマッチングキャンセルを行う関数\n  export const cancelMatch = async (): Promise<CancelResult> => {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error(\"ログインしていないユーザーです。\");\n    }\n  \n    const cancelMatchFunction = httpsCallable(funcs, 'cancelMatchFunction');\n    const result = await cancelMatchFunction();\n    \n    // 型アサーションを使ってunknown型からCancelResult型にキャスト\n    return result.data as CancelResult;\n  };"],"mappings":"AAAA;AACA,OAASA,aAAa,KAAQ,oBAAoB,CAClD,OAASC,IAAI,CAAEC,KAAK,KAAQ,iBAAiB,CAAE;AAE/C;AAOE;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,MAAc,EAA2B,CAC1E,KAAM,CAAAC,IAAI,CAAGJ,IAAI,CAACK,WAAW,CAC7B,GAAI,CAACD,IAAI,CAAE,CACT,KAAM,IAAI,CAAAE,KAAK,CAAC,kBAAkB,CAAC,CACrC,CAEA,KAAM,CAAAC,oBAAoB,CAAGR,aAAa,CAACE,KAAK,CAAE,sBAAsB,CAAC,CACzE,KAAM,CAAAO,MAAM,CAAG,KAAM,CAAAD,oBAAoB,CAAC,CAAEJ,MAAO,CAAC,CAAC,CAErD;AACA,MAAO,CAAAK,MAAM,CAACC,IAAI,CACpB,CAAC,CAED;AAKA;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAmC,CAC5D,KAAM,CAAAN,IAAI,CAAGJ,IAAI,CAACK,WAAW,CAC7B,GAAI,CAACD,IAAI,CAAE,CACT,KAAM,IAAI,CAAAE,KAAK,CAAC,kBAAkB,CAAC,CACrC,CAEA,KAAM,CAAAK,mBAAmB,CAAGZ,aAAa,CAACE,KAAK,CAAE,qBAAqB,CAAC,CACvE,KAAM,CAAAO,MAAM,CAAG,KAAM,CAAAG,mBAAmB,CAAC,CAAC,CAE1C;AACA,MAAO,CAAAH,MAAM,CAACC,IAAI,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}