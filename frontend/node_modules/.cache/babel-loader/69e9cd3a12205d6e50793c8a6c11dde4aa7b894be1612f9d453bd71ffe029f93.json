{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { sendMessage, onMessageAdded, onBattleEnd } from \"../services/firebase-realtime-database.ts\";\nimport { useAuth } from \"../services/useAuth.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleView = () => {\n  _s();\n  //#region init\n  const [isViewLoaded, setIsLoaded] = useState(false);\n  const {\n    roomId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const myId = (user === null || user === void 0 ? void 0 : user.uid) || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state = location.state.roomData;\n  const playersKey = Object.keys(state.players);\n  const isHost = myId === state.players[0].id;\n  // const isHost = myId === state.players[playersKey[0]].id;\n\n  const myData = isHost ? state.players[playersKey[0]] : state.players[playersKey[1]];\n  const opponentData = isHost ? state.players[playersKey[1]] : state.players[playersKey[0]];\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n  const [remainingTime, setRemainingTime] = useState(battleConfig.oneTurnTime);\n  //#endregion\n\n  useEffect(() => {\n    console.log(\"battle view load complete\", isHost);\n    setIsLoaded(true);\n  }, [battleConfig]);\n\n  // Player names mapping\n  const playerNames = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name\n  };\n  const [chatLog, setChatLog] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isMyTurn, setIsMyTurn] = useState(isHost); // Initial turn state (placeholder)\n  const [turnCount, setTurnCount] = useState(0);\n\n  // ゲームの進行状況を監視する\n  useEffect(() => {\n    if (roomId && isViewLoaded) {\n      // ターン更新をFirebaseから受け取る\n      onMessageAdded(roomId, newMessage => {\n        console.log(\"onMessageAdded:\", newMessage);\n        // setIsMyTurn(!isMyTurn);\n        setIsMyTurn(prevTurn => !prevTurn);\n        setTurnCount(turnCount + 1);\n        setChatLog(prevChatLog => [...prevChatLog, {\n          senderId: newMessage.senderId,\n          message: newMessage.message\n        }]);\n      });\n    }\n  }, [roomId, isViewLoaded, turnCount]);\n\n  // バトル終了の監視\n  useEffect(() => {\n    if (roomId) {\n      onBattleEnd(roomId, () => {\n        alert(\"Battle Ended!\");\n      });\n    }\n  }, [roomId]);\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId) {\n      setMessage(\"送信中...\");\n      await sendMessage(roomId, message);\n      setMessage(\"\");\n    }\n  };\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5BFE\\u6226\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u30ED\\u30B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [playerNames[msg.senderId] || \"Unknown\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6B8B\\u308A\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u6570: \", battleConfig.maxTurn - turnCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u3053\\u306E\\u30BF\\u30FC\\u30F3\\u306E\\u6B8B\\u308A\\u6642\\u9593: \", remainingTime, \"\\u79D2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30BF\\u30FC\\u30F3\\u30D7\\u30EC\\u30FC\\u30E4\\u30FC: \", isMyTurn ? \"あなた\" : \"相手\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u76F8\\u624B: \", opponentData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !isMyTurn,\n        children: isMyTurn || message === \"送信中...\" ? \"送信\" : \"Wait for your turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/result\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishMatching,\n        children: \"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleView, \"8mXQyP6QuYRznf1onMWJe9CINl4=\", false, function () {\n  return [useParams, useAuth, useLocation];\n});\n_c = BattleView;\nexport default BattleView;\nvar _c;\n$RefreshReg$(_c, \"BattleView\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useParams","sendMessage","onMessageAdded","onBattleEnd","useAuth","jsxDEV","_jsxDEV","BattleView","_s","isViewLoaded","setIsLoaded","roomId","user","myId","uid","location","state","roomData","playersKey","Object","keys","players","isHost","id","myData","opponentData","myName","name","battleConfig","remainingTime","setRemainingTime","oneTurnTime","console","log","playerNames","chatLog","setChatLog","message","setMessage","isMyTurn","setIsMyTurn","turnCount","setTurnCount","newMessage","prevTurn","prevChatLog","senderId","alert","handleSendMessage","trim","handleFinishMatching","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","maxTurn","type","placeholder","value","onChange","e","target","onClick","disabled","to","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport {\n  sendMessage,\n  onMessageAdded,\n  onBattleEnd,\n} from \"../services/firebase-realtime-database.ts\";\nimport { BattleLog, PlayerData, RoomData } from \"shared/dist/types\";\nimport { useAuth } from \"../services/useAuth.tsx\";\n\nconst BattleView: React.FC = () => {\n  //#region init\n  const [isViewLoaded, setIsLoaded] = useState<boolean>(false);\n  const { roomId } = useParams<{ roomId: string }>();\n\n  const { user } = useAuth();\n  const myId = user?.uid || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state: RoomData = location.state.roomData;\n  const playersKey = Object.keys(state.players);\n  const isHost = myId === state.players[0].id;\n  // const isHost = myId === state.players[playersKey[0]].id;\n\n  const myData: PlayerData = isHost\n    ? state.players[playersKey[0]]\n    : state.players[playersKey[1]];\n  const opponentData: PlayerData = isHost\n    ? state.players[playersKey[1]]\n    : state.players[playersKey[0]];\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n  const [remainingTime, setRemainingTime] = useState<number>(\n    battleConfig.oneTurnTime\n  );\n  //#endregion\n\n  useEffect(() => {\n    console.log(\"battle view load complete\", isHost);\n    setIsLoaded(true);\n  }, [battleConfig]);\n\n  // Player names mapping\n  const playerNames: Record<string, string> = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name,\n  };\n  const [chatLog, setChatLog] = useState<\n    { senderId: string; message: string }[]\n  >([]);\n  const [message, setMessage] = useState<string>(\"\");\n  const [isMyTurn, setIsMyTurn] = useState<boolean>(isHost); // Initial turn state (placeholder)\n  const [turnCount, setTurnCount] = useState<number>(0);\n\n  // ゲームの進行状況を監視する\n  useEffect(() => {\n    if (roomId && isViewLoaded) {\n      // ターン更新をFirebaseから受け取る\n      onMessageAdded(roomId, (newMessage) => {\n        console.log(\"onMessageAdded:\", newMessage);\n        // setIsMyTurn(!isMyTurn);\n        setIsMyTurn((prevTurn) => !prevTurn);\n\n        setTurnCount(turnCount + 1);\n\n        setChatLog((prevChatLog) => [\n          ...prevChatLog,\n          { senderId: newMessage.senderId, message: newMessage.message },\n        ]);\n      });\n    }\n  }, [roomId, isViewLoaded, turnCount]);\n\n  // バトル終了の監視\n  useEffect(() => {\n    if (roomId) {\n      onBattleEnd(roomId, () => {\n        alert(\"Battle Ended!\");\n      });\n    }\n  }, [roomId]);\n\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId) {\n      setMessage(\"送信中...\");\n      await sendMessage(roomId, message);\n      setMessage(\"\");\n    }\n  };\n\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return (\n    <div>\n      <h1>対戦画面</h1>\n      <p>ルームID: {roomId}</p>\n      <div>\n        <h2>チャットログ</h2>\n        <ul>\n          {chatLog.map((msg, index) => (\n            <li key={index}>\n              <strong>{playerNames[msg.senderId] || \"Unknown\"}:</strong>{\" \"}\n              {msg.message}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p>残りメッセージ数: {battleConfig.maxTurn - turnCount}</p>\n      <p>このターンの残り時間: {remainingTime}秒</p>\n      <p>ターンプレーヤー: {isMyTurn ? \"あなた\" : \"相手\"}</p>\n      <p>相手: {opponentData.name}</p>\n      <div>\n        <label>\n          メッセージ:\n          <input\n            type=\"text\"\n            placeholder=\"Enter message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </label>\n        <button onClick={handleSendMessage} disabled={!isMyTurn}>\n          {isMyTurn || message === \"送信中...\" ? \"送信\" : \"Wait for your turn\"}\n        </button>\n      </div>\n      <Link to=\"/result\">\n        <button onClick={handleFinishMatching}>バトル終了</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default BattleView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}