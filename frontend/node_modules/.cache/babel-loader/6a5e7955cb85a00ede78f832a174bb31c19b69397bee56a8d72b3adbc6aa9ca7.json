{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { savePlayerName, requestMatch } from \"../services/FRD.ts\";\nimport { signInAnonymouslyUser } from \"../services/firebase.ts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeView = () => {\n  _s();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerScore, setPlayerScore] = useState(9999);\n  const [aiPrompt, setAiPrompt] = useState(\"Input AI prompt here\");\n  const [isMatching, setIsMatching] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // 認証状態\n\n  const navigate = useNavigate();\n\n  // 匿名認証の処理\n  useEffect(() => {\n    signInAnonymouslyUser().then(() => {\n      setIsAuthenticated(true); // 認証に成功したら、状態を更新\n    }).catch(error => {\n      console.error(\"Anonymous authentication failed:\", error);\n      setIsAuthenticated(false);\n    });\n  }, []);\n\n  // マッチングの処理\n  const startMatch = async () => {\n    if (isAuthenticated) {\n      // 認証が成功している場合のみ実行\n      const playerId = \"uniquePlayerId\"; // プレイヤーIDは認証時に取得可能な場合もありますが、例として固定値\n      const nameToSave = playerName === \"\" ? \"ゲスト\" : playerName;\n      setPlayerName(nameToSave);\n\n      // Firebaseにプレイヤー名を保存\n      await savePlayerName(playerId, nameToSave);\n\n      // Firebaseにマッチングリクエストを送信\n      setIsMatching(true);\n      const roomId = await requestMatch(playerId); // マッチング成功でルームID取得（仮実装）\n\n      const myData = {\n        playerName: nameToSave,\n        playerScore,\n        aiPrompt\n      };\n\n      // マッチングが成功したらバトル画面へ遷移\n      navigate(`/battle/${playerId}`, {\n        state: {\n          matchData: {\n            roomId: \"room123\",\n            opponentId: \"opponentId\",\n            opponentName: \"Opponent\"\n          },\n          myData\n        }\n      });\n      setIsMatching(false);\n    } else {\n      console.log(\"User is not authenticated. Please sign in.\");\n    }\n  };\n\n  // html\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30DB\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isAuthenticated ?\n    /*#__PURE__*/\n    // 認証済みの場合に表示する内容\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Player Name: \", playerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", playerScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"AI\\u30D7\\u30ED\\u30F3\\u30D7\\u30C8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: aiPrompt,\n            onChange: e => setAiPrompt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startMatch,\n        disabled: isMatching,\n        children: isMatching ? \"Matching...\" : \"Start Matching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Signing in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) // 認証中の場合に表示する内容\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeView, \"VNa7qdHWGGUPt1HVCd/VDG69Zjw=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeView;\nexport default HomeView;\nvar _c;\n$RefreshReg$(_c, \"HomeView\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","savePlayerName","requestMatch","signInAnonymouslyUser","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeView","_s","playerName","setPlayerName","playerScore","setPlayerScore","aiPrompt","setAiPrompt","isMatching","setIsMatching","isAuthenticated","setIsAuthenticated","navigate","then","catch","error","console","startMatch","playerId","nameToSave","roomId","myData","state","matchData","opponentId","opponentName","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx"],"sourcesContent":["import React, { useState,  useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { savePlayerName, requestMatch } from \"../services/FRD.ts\";\nimport { signInAnonymouslyUser } from \"../services/firebase.ts\";\n\ninterface MyData {\n  playerName: string;\n  playerScore: number;\n  aiPrompt: string;\n}\n\nconst HomeView: React.FC = () => {\n  const [playerName, setPlayerName] = useState<string>(\"\");\n  const [playerScore, setPlayerScore] = useState<number>(9999);\n  const [aiPrompt, setAiPrompt] = useState<string>(\"Input AI prompt here\");\n  const [isMatching, setIsMatching] = useState<boolean>(false);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);  // 認証状態\n\n  const navigate = useNavigate();\n\n   // 匿名認証の処理\n   useEffect(() => {\n    signInAnonymouslyUser()\n      .then(() => {\n        setIsAuthenticated(true);  // 認証に成功したら、状態を更新\n      })\n      .catch((error) => {\n        console.error(\"Anonymous authentication failed:\", error);\n        setIsAuthenticated(false);\n      });\n  }, []);\n\n  // マッチングの処理\n  const startMatch = async (): Promise<void> => {\n    if (isAuthenticated) {  // 認証が成功している場合のみ実行\n      const playerId = \"uniquePlayerId\";  // プレイヤーIDは認証時に取得可能な場合もありますが、例として固定値\n      const nameToSave = playerName === \"\" ? \"ゲスト\" : playerName;\n      setPlayerName(nameToSave);\n\n      // Firebaseにプレイヤー名を保存\n      await savePlayerName(playerId, nameToSave);\n\n      // Firebaseにマッチングリクエストを送信\n      setIsMatching(true);\n      const roomId = await requestMatch(playerId);  // マッチング成功でルームID取得（仮実装）\n\n      const myData: MyData = {\n        playerName: nameToSave,\n        playerScore,\n        aiPrompt,\n      };\n\n      // マッチングが成功したらバトル画面へ遷移\n      navigate(`/battle/${playerId}`, {\n        state: { matchData: { roomId: \"room123\", opponentId: \"opponentId\", opponentName: \"Opponent\" }, myData },\n      });\n      \n      setIsMatching(false);\n    }else {\n      console.log(\"User is not authenticated. Please sign in.\");\n    }\n  };\n\n  // html\n  return (\n    <div>\n      <h1>ホーム</h1>\n      {isAuthenticated ? (  // 認証済みの場合に表示する内容\n        <>\n          <p>Player Name: {playerName}</p>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n          />\n          <p>Score: {playerScore}</p>\n          <div>\n            <label>\n              AIプロンプト:\n              <input\n                type=\"text\"\n                value={aiPrompt}\n                onChange={(e) => setAiPrompt(e.target.value)}\n              />\n            </label>\n          </div>\n          <button onClick={startMatch} disabled={isMatching}>\n            {isMatching ? \"Matching...\" : \"Start Matching\"}\n          </button>\n        </>\n      ) : (\n        <p>Signing in...</p>  // 認証中の場合に表示する内容\n      )}\n    </div>\n  );\n};\n\nexport default HomeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}