{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link,useLocation,useNavigate,useParams}from\"react-router-dom\";import{sendMessage,onMessageAdded,sendAnswer,checkAnswers,onResultUpdated}from\"../services/firebase-realtime-database.ts\";import{useAuth}from\"../services/useAuth.tsx\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BattleView=()=>{//#region init\nconst[isViewLoaded,setIsLoaded]=useState(false);const{roomId}=useParams();const{user}=useAuth();const myId=(user===null||user===void 0?void 0:user.uid)||\"error\";// Location and Params\nconst location=useLocation();const state=location.state.roomData;const playersKey=Object.keys(state.players);const isHost=myId===state.players[0].id;const myNumber=isHost?0:1;// const isHost = myId === state.players[playersKey[0]].id;\nconst myData=isHost?state.players[playersKey[0]]:state.players[playersKey[1]];const opponentData=isHost?state.players[playersKey[1]]:state.players[playersKey[0]];// Player Information\nconst myName=`${myData.name} (あなた)`||\"error\";// Battle Configuration\nconst battleConfig=state.battleConfig;// Player names mapping\nconst playerNames={[myId]:myName,[opponentData.id]:opponentData.name};const navigate=useNavigate();const[chatLog,setChatLog]=useState([]);const[message,setMessage]=useState(\"\");const[isMyTurn,setIsMyTurn]=useState(isHost);// Initial turn state (placeholder)\nconst[remainTurn,setRemainTurn]=useState(state.battleConfig.maxTurn);const[remainingTime,setRemainingTime]=useState(battleConfig.oneTurnTime);const[answer,setAnswer]=useState({playerId:myId,identity:true,select:null,message:\"\"});const[isSubmitted,setIsSubmitted]=useState(false);//#endregion\n// ViewDidLoad\nuseEffect(()=>{setIsLoaded(true);},[battleConfig]);//メッセージ更新\nuseEffect(()=>{if(roomId&&isViewLoaded){onMessageAdded(roomId,newMessage=>{console.log(\"onMessageAdded:\",newMessage);setChatLog(prevChatLog=>[...prevChatLog,{senderId:newMessage.senderId,message:newMessage.message}]);});}},[roomId,isViewLoaded]);//メッセージ受信時\nuseEffect(()=>{if(isViewLoaded){setIsMyTurn(prevTurn=>!prevTurn);setRemainTurn(prevCount=>prevCount-1);}},[chatLog]);// バトル終了時\nuseEffect(()=>{if(remainTurn===0){// alert(\"Battle Ended!\");\n}},[remainTurn]);//resultに遷移\nconst toResultSegue=result=>{navigate(\"/result\",{state:{resultData:result}});};//#region ui\nconst handleSendMessage=async()=>{if(message.trim()&&isMyTurn&&roomId&&remainTurn>0){setMessage(\"送信中...\");await sendMessage(roomId,message);setMessage(\"\");}};// 回答を送信\nconst handleSubmit=async()=>{if(answer.select===null||!answer.identity||!roomId||!myId){console.error(\"Invalid answer data\");return;}if(answer.message.trim()===\"\"){//TODO: メッセージが空の場合の処理\n}sendAnswer(roomId,answer);setIsSubmitted(true);//両回答が揃ったら結果を確認\nif(isHost){checkAnswers(roomId);}};//リザルトを監視\nuseEffect(()=>{if(isSubmitted&&roomId){const unsubscribe=onResultUpdated(roomId,myNumber,result=>{if(result){console.log(\"Result updated:\",result);// バトル終了時の処理\ntoResultSegue(result);}console;});return()=>{unsubscribe();};}},[isSubmitted]);const handleFinishMatching=()=>{console.log(\"Finishing battle...\");// バトル終了のロジック\n};//html\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u5BFE\\u6226\\u753B\\u9762\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u30EB\\u30FC\\u30E0ID: \",roomId]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u30C1\\u30E3\\u30C3\\u30C8\\u30ED\\u30B0\"}),/*#__PURE__*/_jsx(\"ul\",{children:chatLog.map((msg,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[playerNames[msg.senderId]||\"Unknown\",\":\"]}),\" \",msg.message]},index))})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u6B8B\\u308A\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u6570: \",remainTurn]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u3053\\u306E\\u30BF\\u30FC\\u30F3\\u306E\\u6B8B\\u308A\\u6642\\u9593: \",remainingTime,\"\\u79D2\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u30BF\\u30FC\\u30F3\\u30D7\\u30EC\\u30FC\\u30E4\\u30FC: \",isMyTurn?\"あなた\":\"相手\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u76F8\\u624B: \",opponentData.name]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter message\",value:message,onChange:e=>setMessage(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:remainTurn<=0||!isMyTurn,children:isMyTurn||message===\"送信中...\"?\"送信\":\"Wait for your turn\"})]}),remainTurn===0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u30C1\\u30E3\\u30C3\\u30C8\\u76F8\\u624B\\u306F\\uFF1F:\",/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setAnswer(prevAnswer=>({...prevAnswer,select:e.target.value===\"true\"})),value:answer.select!==null?String(answer.select):\"\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u9078\\u3093\\u3067\\u304F\\u3060\\u3055\\u3044\"}),/*#__PURE__*/_jsx(\"option\",{value:\"true\",children:\"\\u4EBA\\u9593\"}),/*#__PURE__*/_jsx(\"option\",{value:\"false\",children:\"AI\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u7406\\u7531:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:answer.message,onChange:e=>setAnswer(prevAnswer=>({...prevAnswer,message:e.target.value})),placeholder:\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:isSubmitted,children:isSubmitted?\"送信完了\":\"送信\"})]}),/*#__PURE__*/_jsx(Link,{to:\"/result\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleFinishMatching,children:\"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"})})]});//#endregion\n};export default BattleView;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","useParams","sendMessage","onMessageAdded","sendAnswer","checkAnswers","onResultUpdated","useAuth","jsx","_jsx","jsxs","_jsxs","BattleView","isViewLoaded","setIsLoaded","roomId","user","myId","uid","location","state","roomData","playersKey","Object","keys","players","isHost","id","myNumber","myData","opponentData","myName","name","battleConfig","playerNames","navigate","chatLog","setChatLog","message","setMessage","isMyTurn","setIsMyTurn","remainTurn","setRemainTurn","maxTurn","remainingTime","setRemainingTime","oneTurnTime","answer","setAnswer","playerId","identity","select","isSubmitted","setIsSubmitted","newMessage","console","log","prevChatLog","senderId","prevTurn","prevCount","toResultSegue","result","resultData","handleSendMessage","trim","handleSubmit","error","unsubscribe","handleFinishMatching","children","map","msg","index","type","placeholder","value","onChange","e","target","onClick","disabled","prevAnswer","String","to"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  sendMessage,\n  onMessageAdded,\n  sendAnswer,\n  checkAnswers,\n  onResultUpdated,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  BattleLog,\n  PlayerData,\n  RoomData,\n  SubmitAnswer,\n  ResultData,\n} from \"shared/dist/types\";\nimport { useAuth } from \"../services/useAuth.tsx\";\n\nconst BattleView: React.FC = () => {\n  //#region init\n  const [isViewLoaded, setIsLoaded] = useState<boolean>(false);\n  const { roomId } = useParams<{ roomId: string }>();\n\n  const { user } = useAuth();\n  const myId = user?.uid || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state: RoomData = location.state.roomData;\n  const playersKey = Object.keys(state.players);\n  const isHost = myId === state.players[0].id;\n  const myNumber = isHost ? 0 : 1;\n  // const isHost = myId === state.players[playersKey[0]].id;\n\n  const myData: PlayerData = isHost\n    ? state.players[playersKey[0]]\n    : state.players[playersKey[1]];\n  const opponentData: PlayerData = isHost\n    ? state.players[playersKey[1]]\n    : state.players[playersKey[0]];\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n\n  // Player names mapping\n  const playerNames: Record<string, string> = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name,\n  };\n\n  const navigate = useNavigate();\n  const [chatLog, setChatLog] = useState<\n    { senderId: string; message: string }[]\n  >([]);\n  const [message, setMessage] = useState<string>(\"\");\n  const [isMyTurn, setIsMyTurn] = useState<boolean>(isHost); // Initial turn state (placeholder)\n  const [remainTurn, setRemainTurn] = useState<number>(\n    state.battleConfig.maxTurn\n  );\n  const [remainingTime, setRemainingTime] = useState<number>(\n    battleConfig.oneTurnTime\n  );\n\n  const [answer, setAnswer] = useState<SubmitAnswer>({\n    playerId: myId,\n    identity: true,\n    select: null,\n    message: \"\",\n  });\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n  //#endregion\n\n  // ViewDidLoad\n  useEffect(() => {\n    setIsLoaded(true);\n  }, [battleConfig]);\n\n  //メッセージ更新\n  useEffect(() => {\n    if (roomId && isViewLoaded) {\n      onMessageAdded(roomId, (newMessage) => {\n        console.log(\"onMessageAdded:\", newMessage);\n        setChatLog((prevChatLog) => [\n          ...prevChatLog,\n          { senderId: newMessage.senderId, message: newMessage.message },\n        ]);\n      });\n    }\n  }, [roomId, isViewLoaded]);\n\n  //メッセージ受信時\n  useEffect(() => {\n    if (isViewLoaded) {\n      setIsMyTurn((prevTurn) => !prevTurn);\n      setRemainTurn((prevCount) => prevCount - 1);\n    }\n  }, [chatLog]);\n\n  // バトル終了時\n  useEffect(() => {\n    if (remainTurn === 0) {\n      // alert(\"Battle Ended!\");\n    }\n  }, [remainTurn]);\n\n  //resultに遷移\n  const toResultSegue = (result: ResultData) => {\n    navigate(\"/result\", { state: { resultData: result } });\n  };\n\n  //#region ui\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId && remainTurn > 0) {\n      setMessage(\"送信中...\");\n      await sendMessage(roomId, message);\n      setMessage(\"\");\n    }\n  };\n\n  // 回答を送信\n  const handleSubmit = async () => {\n    if (answer.select === null || !answer.identity || !roomId || !myId) {\n      console.error(\"Invalid answer data\");\n      return;\n    }\n    if (answer.message.trim() === \"\") {\n      //TODO: メッセージが空の場合の処理\n    }\n    sendAnswer(roomId, answer);\n    setIsSubmitted(true);\n\n    //両回答が揃ったら結果を確認\n    if (isHost) {\n      checkAnswers(roomId);\n    }\n  };\n\n  //リザルトを監視\n  useEffect(() => {\n    if (isSubmitted && roomId) {\n      const unsubscribe = onResultUpdated(roomId, myNumber, (result) => {\n        if (result) {\n          console.log(\"Result updated:\", result);\n          // バトル終了時の処理\n          toResultSegue(result);\n        }\n        console;\n      });\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [isSubmitted]);\n\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return (\n    <div>\n      <h1>対戦画面</h1>\n      <p>ルームID: {roomId}</p>\n      <div>\n        <h2>チャットログ</h2>\n        <ul>\n          {chatLog.map((msg, index) => (\n            <li key={index}>\n              <strong>{playerNames[msg.senderId] || \"Unknown\"}:</strong>{\" \"}\n              {msg.message}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p>残りメッセージ数: {remainTurn}</p>\n      <p>このターンの残り時間: {remainingTime}秒</p>\n      <p>ターンプレーヤー: {isMyTurn ? \"あなた\" : \"相手\"}</p>\n      <p>相手: {opponentData.name}</p>\n      <div>\n        <label>\n          メッセージ:\n          <input\n            type=\"text\"\n            placeholder=\"Enter message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </label>\n        <button\n          onClick={handleSendMessage}\n          disabled={remainTurn <= 0 || !isMyTurn}\n        >\n          {isMyTurn || message === \"送信中...\" ? \"送信\" : \"Wait for your turn\"}\n        </button>\n      </div>\n      {remainTurn === 0 && (\n        <div>\n          <h2>バトル終了</h2>\n          <label>\n            チャット相手は？:\n            <select\n              onChange={(e) =>\n                setAnswer((prevAnswer) => ({\n                  ...prevAnswer,\n                  select: e.target.value === \"true\",\n                }))\n              }\n              value={answer.select !== null ? String(answer.select) : \"\"}\n            >\n              <option value=\"\">選んでください</option>\n              <option value=\"true\">人間</option>\n              <option value=\"false\">AI</option>\n            </select>\n          </label>\n\n          <p>\n            理由:\n            <input\n              type=\"text\"\n              value={answer.message}\n              onChange={(e) =>\n                setAnswer((prevAnswer) => ({\n                  ...prevAnswer,\n                  message: e.target.value,\n                }))\n              }\n              placeholder=\"メッセージを入力してください\"\n            />\n          </p>\n          <button onClick={handleSubmit} disabled={isSubmitted}>\n            {isSubmitted ? \"送信完了\" : \"送信\"}\n          </button>\n        </div>\n      )}\n      <Link to=\"/result\">\n        <button onClick={handleFinishMatching}>バトル終了</button>\n      </Link>\n    </div>\n  );\n\n  //#endregion\n};\n\nexport default BattleView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}