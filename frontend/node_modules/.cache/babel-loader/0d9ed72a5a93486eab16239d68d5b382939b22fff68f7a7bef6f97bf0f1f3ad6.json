{"ast":null,"code":"// services/firebase-functions-client.ts\nimport { httpsCallable } from \"firebase/functions\";\nimport { auth, funcs } from \"./firebase_f.ts\"; // Firebase初期化ファイルをインポート\n\n// マッチングリクエストの結果の型定義\n\n// サーバーレス関数を使ってマッチングリクエストを送信する関数\nexport const requestMatch = async rating => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n  const requestMatchFunction = httpsCallable(funcs, 'requestMatchFunction');\n  const result = await requestMatchFunction({\n    rating\n  });\n\n  // 型アサーションを使ってunknown型からMatchResult型にキャスト\n  return result.data;\n};\n\n// キャンセルリクエストの結果の型定義\n\n// サーバーレス関数を使ってマッチングキャンセルを行う関数\nexport const cancelMatch = async () => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n  const cancelMatchFunction = httpsCallable(funcs, 'cancelMatchFunction');\n  const result = await cancelMatchFunction();\n\n  // 型アサーションを使ってunknown型からCancelResult型にキャスト\n  return result.data;\n};","map":{"version":3,"names":["httpsCallable","auth","funcs","requestMatch","rating","user","currentUser","Error","requestMatchFunction","result","data","cancelMatch","cancelMatchFunction"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/services/firebase-functions-client.ts"],"sourcesContent":["// services/firebase-functions-client.ts\nimport { httpsCallable } from \"firebase/functions\";\nimport { auth, funcs } from \"./firebase_f.ts\"; // Firebase初期化ファイルをインポート\n\n// マッチングリクエストの結果の型定義\ninterface MatchResult {\n    roomId?: string;\n    opponentId?: string;\n    message?: string;\n  }\n\n  // サーバーレス関数を使ってマッチングリクエストを送信する関数\n  export const requestMatch = async (rating: number): Promise<MatchResult> => {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error(\"ログインしていないユーザーです。\");\n    }\n  \n    const requestMatchFunction = httpsCallable(funcs, 'requestMatchFunction');\n    const result = await requestMatchFunction({ rating });\n    \n    // 型アサーションを使ってunknown型からMatchResult型にキャスト\n    return result.data as MatchResult;\n  };\n  \n  // キャンセルリクエストの結果の型定義\n  interface CancelResult {\n    message: string;\n  }\n  \n  // サーバーレス関数を使ってマッチングキャンセルを行う関数\n  export const cancelMatch = async (): Promise<CancelResult> => {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error(\"ログインしていないユーザーです。\");\n    }\n  \n    const cancelMatchFunction = httpsCallable(funcs, 'cancelMatchFunction');\n    const result = await cancelMatchFunction();\n    \n    // 型アサーションを使ってunknown型からCancelResult型にキャスト\n    return result.data as CancelResult;\n  };"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB,CAAC,CAAC;;AAE/C;;AAOE;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAc,IAA2B;EAC1E,MAAMC,IAAI,GAAGJ,IAAI,CAACK,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,MAAMC,oBAAoB,GAAGR,aAAa,CAACE,KAAK,EAAE,sBAAsB,CAAC;EACzE,MAAMO,MAAM,GAAG,MAAMD,oBAAoB,CAAC;IAAEJ;EAAO,CAAC,CAAC;;EAErD;EACA,OAAOK,MAAM,CAACC,IAAI;AACpB,CAAC;;AAED;;AAKA;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAmC;EAC5D,MAAMN,IAAI,GAAGJ,IAAI,CAACK,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,MAAMK,mBAAmB,GAAGZ,aAAa,CAACE,KAAK,EAAE,qBAAqB,CAAC;EACvE,MAAMO,MAAM,GAAG,MAAMG,mBAAmB,CAAC,CAAC;;EAE1C;EACA,OAAOH,MAAM,CAACC,IAAI;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}