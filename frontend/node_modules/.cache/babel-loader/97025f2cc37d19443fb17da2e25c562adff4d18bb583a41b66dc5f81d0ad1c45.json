{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { sendMessage, onTurnUpdated, onBattleEnd } from \"../services/firebase-realtime-database.ts\";\nimport { useAuth } from \"../services/useAuth.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleView = () => {\n  _s();\n  //#region init\n  const {\n    roomId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const myId = (user === null || user === void 0 ? void 0 : user.uid) || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state = location.state.roomData;\n  const myData = myId === state.player1.id ? state.player1 : state.player2;\n  const opponentData = myId === state.player1.id ? state.player2 : state.player1;\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n  const [remainingTime, setRemainingTime] = useState(battleConfig.oneTurnTime);\n  //#endregion\n  console.log(\"data\", state);\n\n  // Player names mapping\n  const playerNames = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name\n  };\n  const [chatLog, setChatLog] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isMyTurn, setIsMyTurn] = useState(true); // Initial turn state (placeholder)\n  const [turnCount, setTurnCount] = useState(0);\n\n  // ゲームの進行状況を監視する\n  useEffect(() => {\n    if (roomId) {\n      // ターン更新をFirebaseから受け取る\n      onTurnUpdated(roomId, data => {\n        setIsMyTurn(data.battleLog.activePlayerId === myId);\n        setTurnCount(data.battleLog.currentTurn);\n        const newMessage = data.battleLog.messages[data.battleLog.currentTurn];\n        setChatLog(prevChatLog => [...prevChatLog, {\n          senderId: newMessage.senderId,\n          message: newMessage.message\n        }]);\n        if (message === \"送信中...\") setMessage(\"\");\n      });\n    }\n  }, [roomId, myId, message]);\n\n  // バトル終了の監視\n  useEffect(() => {\n    if (roomId) {\n      onBattleEnd(roomId, () => {\n        alert(\"Battle Ended!\");\n      });\n    }\n  }, [roomId]);\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId) {\n      await sendMessage(roomId, message);\n      setMessage(\"送信中...\");\n      setIsMyTurn(false);\n    }\n  };\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5BFE\\u6226\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u30ED\\u30B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [playerNames[msg.senderId] || \"Unknown\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6B8B\\u308A\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u6570: \", battleConfig.maxTurn - turnCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u3053\\u306E\\u30BF\\u30FC\\u30F3\\u306E\\u6B8B\\u308A\\u6642\\u9593: \", remainingTime, \"\\u79D2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30BF\\u30FC\\u30F3\\u30D7\\u30EC\\u30FC\\u30E4\\u30FC: \", isMyTurn ? \"あなた\" : \"相手\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u76F8\\u624B: \", opponentData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !isMyTurn,\n        children: isMyTurn ? \"送信\" : \"Wait for your turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/result\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishMatching,\n        children: \"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleView, \"t71aPL9xaumdzPkGhucU9n4XUs8=\", false, function () {\n  return [useParams, useAuth, useLocation];\n});\n_c = BattleView;\nexport default BattleView;\nvar _c;\n$RefreshReg$(_c, \"BattleView\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useParams","sendMessage","onTurnUpdated","onBattleEnd","useAuth","jsxDEV","_jsxDEV","BattleView","_s","roomId","user","myId","uid","location","state","roomData","myData","player1","id","player2","opponentData","myName","name","battleConfig","remainingTime","setRemainingTime","oneTurnTime","console","log","playerNames","chatLog","setChatLog","message","setMessage","isMyTurn","setIsMyTurn","turnCount","setTurnCount","data","battleLog","activePlayerId","currentTurn","newMessage","messages","prevChatLog","senderId","alert","handleSendMessage","trim","handleFinishMatching","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","maxTurn","type","placeholder","value","onChange","e","target","onClick","disabled","to","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport {\n  sendMessage,\n  onTurnUpdated,\n  onBattleEnd,\n} from \"../services/firebase-realtime-database.ts\";\nimport { BattleLog, PlayerData, RoomData } from \"shared/dist/types\";\nimport { useAuth } from \"../services/useAuth.tsx\";\n\nconst BattleView: React.FC = () => {\n  //#region init\n  const { roomId } = useParams<{ roomId: string }>();\n\n  const { user } = useAuth();\n  const myId = user?.uid || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state: RoomData = location.state.roomData;\n\n  const myData: PlayerData =\n    myId === state.player1.id ? state.player1 : state.player2!;\n  const opponentData: PlayerData =\n    myId === state.player1.id ? state.player2! : state.player1;\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n  const [remainingTime, setRemainingTime] = useState<number>(\n    battleConfig.oneTurnTime\n  );\n  //#endregion\n  console.log(\"data\", state);\n\n  // Player names mapping\n  const playerNames: Record<string, string> = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name,\n  };\n  const [chatLog, setChatLog] = useState<\n    { senderId: string; message: string }[]\n  >([]);\n  const [message, setMessage] = useState<string>(\"\");\n  const [isMyTurn, setIsMyTurn] = useState<boolean>(true); // Initial turn state (placeholder)\n  const [turnCount, setTurnCount] = useState<number>(0);\n\n  // ゲームの進行状況を監視する\n  useEffect(() => {\n    if (roomId) {\n      // ターン更新をFirebaseから受け取る\n      onTurnUpdated(roomId, (data: { battleLog: BattleLog }) => {\n        setIsMyTurn(data.battleLog.activePlayerId === myId);\n        setTurnCount(data.battleLog.currentTurn);\n\n        const newMessage = data.battleLog.messages[data.battleLog.currentTurn];\n        setChatLog((prevChatLog) => [\n          ...prevChatLog,\n          { senderId: newMessage.senderId, message: newMessage.message },\n        ]);\n        if (message === \"送信中...\") setMessage(\"\");\n      });\n    }\n  }, [roomId, myId, message]);\n\n  // バトル終了の監視\n  useEffect(() => {\n    if (roomId) {\n      onBattleEnd(roomId, () => {\n        alert(\"Battle Ended!\");\n      });\n    }\n  }, [roomId]);\n\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId) {\n      await sendMessage(roomId, message);\n      setMessage(\"送信中...\");\n      setIsMyTurn(false);\n    }\n  };\n\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return (\n    <div>\n      <h1>対戦画面</h1>\n      <p>ルームID: {roomId}</p>\n      <div>\n        <h2>チャットログ</h2>\n        <ul>\n          {chatLog.map((msg, index) => (\n            <li key={index}>\n              <strong>{playerNames[msg.senderId] || \"Unknown\"}:</strong>{\" \"}\n              {msg.message}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p>残りメッセージ数: {battleConfig.maxTurn - turnCount}</p>\n      <p>このターンの残り時間: {remainingTime}秒</p>\n      <p>ターンプレーヤー: {isMyTurn ? \"あなた\" : \"相手\"}</p>\n      <p>相手: {opponentData.name}</p>\n      <div>\n        <label>\n          メッセージ:\n          <input\n            type=\"text\"\n            placeholder=\"Enter message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </label>\n        <button onClick={handleSendMessage} disabled={!isMyTurn}>\n          {isMyTurn ? \"送信\" : \"Wait for your turn\"}\n        </button>\n      </div>\n      <Link to=\"/result\">\n        <button onClick={handleFinishMatching}>バトル終了</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default BattleView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}