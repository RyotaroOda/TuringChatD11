{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{removeFromWaitingList}from\"../services/firebase-realtime-database.ts\";import{requestMatch,cancelMatch}from\"../services/firebase-functions_f.ts\";// Firebase Functionsの呼び出しをインポート\nimport{useAuth}from\"../services/useAuth.tsx\";// useAuthフックをインポート\nimport{signOut}from\"firebase/auth\";// Firebaseのログアウト機能をインポート\nimport{auth}from\"../services/firebase_f.ts\";// Firebaseの認証インスタンスをインポート\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Firebaseの認証状態確認\nconst HomeView=()=>{const[playerScore,setPlayerScore]=useState(9999);const[aiPrompt,setAiPrompt]=useState(\"Input AI prompt here\");const[isMatching,setIsMatching]=useState(false);const[playerName,setPlayerName]=useState(\"\");// プレイヤーネームを保持\nconst navigate=useNavigate();const{user}=useAuth();// useAuthフックで認証状態を取得\nuseEffect(()=>{if(user){// ログイン済みユーザーならFirebaseからプレイヤー名を取得\nif(user.isAnonymous){setPlayerName(\"ゲスト\");// 匿名ユーザーの場合はゲスト表示\n}else if(user.displayName){setPlayerName(user.displayName);// 名前が登録されている場合は表示\n}else{setPlayerName(user.email||\"\");// 名前がない場合はメールアドレスを表示\n}}},[user]);// ログアウト処理\nconst handleLogout=async()=>{try{await signOut(auth);alert(\"ログアウトしました\");navigate(\"/login\");// ログアウト後にログイン画面にリダイレクト\n}catch(error){console.error(\"ログアウトエラー:\",error);}};// マッチング開始処理\nconst startMatch=async()=>{setIsMatching(true);// マッチング状態を設定\ntry{const result=await requestMatch(playerScore);// Firebase Functionsを使ってマッチングリクエスト\nif(result.roomId){console.log(\"Match found with opponent:\",result.opponentId);navigate(`/battle/${result.roomId}`,{state:{matchData:result,myData:{playerName,playerScore,aiPrompt}}});}else{console.log(result.message);}}catch(error){console.error(\"マッチングエラー:\",error);setIsMatching(false);// エラー発生時にマッチング状態を解除\n}};// // マッチング開始\n// const startMatch = (): void => {\n//   if (!user) return; // ログインしていない場合は処理を中断\n//   setIsMatching(true);\n//   requestMatch(); //TODO - Matching Mode\n//   // マッチング成功時にバトル画面へ遷移\n//   onMatchFound((data) => {\n//     console.log(\"Match found with opponent:\", data.opponentId);\n//     navigate(`/battle/${data.roomId}`, {\n//       state: { matchData: data, myData: { playerName, playerScore, aiPrompt } },\n//     });\n//     setIsMatching(false);\n//   });\n// };\n// マッチングキャンセル処理\nconst handleCancelMatch=async()=>{setIsMatching(false);// マッチング状態を解除\ntry{const result=await cancelMatch();// Firebase Functionsを使ってキャンセル\nconsole.log(result.message);}catch(error){console.error(\"キャンセルエラー:\",error);}};// プレイヤーが画面を閉じたりリロードした場合の待機リスト削除\nuseEffect(()=>{const handleUnload=async()=>{if(isMatching){await removeFromWaitingList();// ロード/画面遷移時に待機リストから削除\nconsole.log(\"画面リロードまたは遷移により待機リストから削除されました。\");}};window.addEventListener(\"beforeunload\",handleUnload);// ブラウザを閉じるまたはリロード時に実行\nreturn()=>{window.removeEventListener(\"beforeunload\",handleUnload);// クリーンアップ\n};},[isMatching]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u30DB\\u30FC\\u30E0\"}),user?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u3053\\u3093\\u306B\\u3061\\u306F\\u3001\",playerName,\"\\u3055\\u3093 \"]}),user.isAnonymous?/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/login\"),children:\"\\u30ED\\u30B0\\u30A4\\u30F3\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/login\"),children:\"\\u30ED\\u30B0\\u30A4\\u30F3\"}),\" \"]}),user&&!user.isAnonymous?null:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"PlayerName: \\u30B2\\u30B9\\u30C8\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",playerScore]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"AI\\u30D7\\u30ED\\u30F3\\u30D7\\u30C8:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:aiPrompt,onChange:e=>setAiPrompt(e.target.value)})]})}),isMatching?/*#__PURE__*/_jsx(\"button\",{onClick:handleCancelMatch,children:\"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"})// マッチングキャンセルボタン\n:/*#__PURE__*/_jsx(\"button\",{onClick:startMatch,children:\"Start Matching\"})// マッチング開始ボタン\n,isMatching?/*#__PURE__*/_jsx(\"p\",{children:\"\\\"Matching ...\\\"\"}):/*#__PURE__*/_jsx(\"p\",{})]});};export default HomeView;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","removeFromWaitingList","requestMatch","cancelMatch","useAuth","signOut","auth","jsx","_jsx","jsxs","_jsxs","HomeView","playerScore","setPlayerScore","aiPrompt","setAiPrompt","isMatching","setIsMatching","playerName","setPlayerName","navigate","user","isAnonymous","displayName","email","handleLogout","alert","error","console","startMatch","result","roomId","log","opponentId","state","matchData","myData","message","handleCancelMatch","handleUnload","window","addEventListener","removeEventListener","children","onClick","type","value","onChange","e","target"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  onMatchFound,\n  removeFromWaitingList,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  requestMatch,\n  cancelMatch\n} from \"../services/firebase-functions_f.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\nimport { onAuthStateChanged } from \"firebase/auth\"; // Firebaseの認証状態確認\n\nconst HomeView: React.FC = () => {\n  const [playerScore, setPlayerScore] = useState<number>(9999);\n  const [aiPrompt, setAiPrompt] = useState<string>(\"Input AI prompt here\");\n  const [isMatching, setIsMatching] = useState<boolean>(false);\n  const [playerName, setPlayerName] = useState<string>(\"\"); // プレイヤーネームを保持\n  const navigate = useNavigate();\n  const { user } = useAuth(); // useAuthフックで認証状態を取得\n\n  useEffect(() => {\n    if (user) {\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n\n   // マッチング開始処理\n   const startMatch = async () => {\n    setIsMatching(true); // マッチング状態を設定\n    try {\n      const result = await requestMatch(playerScore); // Firebase Functionsを使ってマッチングリクエスト\n      if (result.roomId) {\n        console.log(\"Match found with opponent:\", result.opponentId);\n        navigate(`/battle/${result.roomId}`, {\n          state: { matchData: result, myData: { playerName, playerScore, aiPrompt } },\n        });\n      } else {\n        console.log(result.message);\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー:\", error);\n      setIsMatching(false); // エラー発生時にマッチング状態を解除\n    }\n  };\n\n  // // マッチング開始\n  // const startMatch = (): void => {\n  //   if (!user) return; // ログインしていない場合は処理を中断\n  //   setIsMatching(true);\n\n  //   requestMatch(); //TODO - Matching Mode\n\n  //   // マッチング成功時にバトル画面へ遷移\n  //   onMatchFound((data) => {\n  //     console.log(\"Match found with opponent:\", data.opponentId);\n  //     navigate(`/battle/${data.roomId}`, {\n  //       state: { matchData: data, myData: { playerName, playerScore, aiPrompt } },\n  //     });\n  //     setIsMatching(false);\n  //   });\n  // };\n\n    // マッチングキャンセル処理\n    const handleCancelMatch = async () => {\n      setIsMatching(false); // マッチング状態を解除\n      try {\n        const result = await cancelMatch(); // Firebase Functionsを使ってキャンセル\n        console.log(result.message);\n      } catch (error) {\n        console.error(\"キャンセルエラー:\", error);\n      }\n    };\n\n      // プレイヤーが画面を閉じたりリロードした場合の待機リスト削除\n  useEffect(() => {\n    const handleUnload = async () => {\n      if (isMatching) {\n        await removeFromWaitingList(); // ロード/画面遷移時に待機リストから削除\n        console.log(\"画面リロードまたは遷移により待機リストから削除されました。\");\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleUnload); // ブラウザを閉じるまたはリロード時に実行\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n\n  return (\n    <div>\n      <h1>ホーム</h1>\n      {/* ログイン状態による表示の切り替え */}\n      {user ? (\n        <div>\n          <p>\n            こんにちは、{playerName}さん {/* ログイン状態に基づいて名前を表示 */}\n          </p>\n          {/* 匿名ユーザーなら「ログイン」ボタンを表示 */}\n          {user.isAnonymous ? (\n            <button onClick={() => navigate(\"/login\")}>ログイン</button> \n          ) : (\n            <button onClick={handleLogout}>ログアウト</button>\n          )}\n        </div>\n      ) : (\n        <div>\n          <button onClick={() => navigate(\"/login\")}>ログイン</button> {/* ログインボタン */}\n        </div>\n      )}\n\n      {/* プレイヤーネームの入力はログイン済みユーザーのみ表示 */}\n      {user && !user.isAnonymous ? null : (\n        <div>\n          <p>PlayerName: ゲスト</p>\n        </div>\n      )}\n\n      <p>Score: {playerScore}</p>\n      <div>\n        <label>\n          AIプロンプト:\n          <input\n            type=\"text\"\n            value={aiPrompt}\n            onChange={(e) => setAiPrompt(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {/* マッチング中にキャンセルボタンを表示 */}\n      {isMatching ? (\n        <button onClick={handleCancelMatch}>キャンセル</button> // マッチングキャンセルボタン\n      ) : (\n        <button onClick={startMatch}>Start Matching</button> // マッチング開始ボタン\n      )}\n      {isMatching ? (\n              <p>\"Matching ...\"</p>\n      ) : (\n        <p></p>\n      )}\n    </div>\n  );\n};\n\nexport default HomeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}