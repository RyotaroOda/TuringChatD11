{"ast":null,"code":"import React,{useState}from\"react\";import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signInAnonymously}from\"firebase/auth\";import{auth}from\"../services/firebase_f.ts\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Auth=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[isRegister,setIsRegister]=useState(false);// サインアップかログインかの状態\nconst[errorMessage,setErrorMessage]=useState(null);// エラーメッセージ\nconst navigate=useNavigate();// navigateフックの使用\n// メールアドレスとパスワードでのログイン・サインアップ処理\nconst handleSubmit=async e=>{e.preventDefault();// パスワードが6文字以上であることを確認する\nif(password.length<6){setErrorMessage(\"パスワードは6文字以上である必要があります\");return;}try{if(isRegister){// サインアップ\nawait createUserWithEmailAndPassword(auth,email,password);alert(\"ユーザーが登録されました\");}else{// ログイン\nawait signInWithEmailAndPassword(auth,email,password);alert(\"ログインに成功しました\");}navigate(\"/\");// ログイン後にホーム画面にリダイレクト\n}catch(error){console.error(error);setErrorMessage(\"エラーが発生しました: \"+error.message);}};// 匿名ログイン処理\nconst handleAnonymousLogin=async()=>{try{await signInAnonymously(auth);alert(\"ゲストでログインしました\");navigate(\"/\");// ログイン後にホーム画面にリダイレクト\n}catch(error){console.error(\"ゲストログインエラー:\",error);setErrorMessage(\"ゲストログイン中にエラーが発生しました\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:isRegister?\"サインアップ\":\"ログイン\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errorMessage}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isRegister?\"登録\":\"ログイン\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsRegister(!isRegister),children:isRegister?\"既にアカウントをお持ちですか？ログイン\":\"アカウントを作成\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u307E\\u305F\\u306F\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAnonymousLogin,children:\"\\u30B2\\u30B9\\u30C8\\u306E\\u307E\\u307E\\u30D7\\u30EC\\u30A4\"})]})]});};export default Auth;","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInAnonymously","auth","useNavigate","jsx","_jsx","jsxs","_jsxs","Auth","email","setEmail","password","setPassword","isRegister","setIsRegister","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","length","alert","error","console","message","handleAnonymousLogin","children","style","color","onSubmit","type","placeholder","value","onChange","target","onClick","marginTop"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/components/Auth.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInAnonymously } from \"firebase/auth\";\nimport { auth } from \"../services/firebase_f.ts\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Auth: React.FC = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRegister, setIsRegister] = useState(false); // サインアップかログインかの状態\n  const [errorMessage, setErrorMessage] = useState<string | null>(null); // エラーメッセージ\n  const navigate = useNavigate(); // navigateフックの使用\n\n  // メールアドレスとパスワードでのログイン・サインアップ処理\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // パスワードが6文字以上であることを確認する\n    if (password.length < 6) {\n      setErrorMessage(\"パスワードは6文字以上である必要があります\");\n      return;\n    }\n\n    try {\n      if (isRegister) {\n        // サインアップ\n        await createUserWithEmailAndPassword(auth, email, password);\n        alert(\"ユーザーが登録されました\");\n      } else {\n        // ログイン\n        await signInWithEmailAndPassword(auth, email, password);\n        alert(\"ログインに成功しました\");\n      }\n      navigate(\"/\"); // ログイン後にホーム画面にリダイレクト\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(\"エラーが発生しました: \" + error.message);\n    }\n  };\n\n  // 匿名ログイン処理\n  const handleAnonymousLogin = async () => {\n    try {\n      await signInAnonymously(auth);\n      alert(\"ゲストでログインしました\");\n      navigate(\"/\"); // ログイン後にホーム画面にリダイレクト\n    } catch (error) {\n      console.error(\"ゲストログインエラー:\", error);\n      setErrorMessage(\"ゲストログイン中にエラーが発生しました\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>{isRegister ? \"サインアップ\" : \"ログイン\"}</h1>\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>} {/* エラーメッセージの表示 */}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"メールアドレス\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"パスワード\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">{isRegister ? \"登録\" : \"ログイン\"}</button>\n      </form>\n\n      <button onClick={() => setIsRegister(!isRegister)}>\n        {isRegister ? \"既にアカウントをお持ちですか？ログイン\" : \"アカウントを作成\"}\n      </button>\n\n      <div style={{ marginTop: \"20px\" }}>\n        <h3>または</h3>\n        <button onClick={handleAnonymousLogin}>ゲストのままプレイ</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}