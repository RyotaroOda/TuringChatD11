{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{onRoomUpdate,getRoomData}from\"../services/firebase-realtime-database.ts\";import{requestMatch,cancelMatch}from\"../services/firebase-functions-client.ts\";// Firebase Functionsの呼び出しをインポート\nimport{useAuth}from\"../services/useAuth.tsx\";// useAuthフックをインポート\nimport{signOut}from\"firebase/auth\";// Firebaseのログアウト機能をインポート\nimport{auth}from\"../services/firebase_f.ts\";// Firebaseの認証インスタンスをインポート\nimport{AIModel}from\"../shared/types.ts\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomeView=()=>{const[score,setScore]=useState(9999);const[aiPrompt,setAiPrompt]=useState(\"Input AI prompt here\");const[roomId,setRoomId]=useState(null);// ルームID\nconst[playerName,setPlayerName]=useState(\"\");// プレイヤーネームを保持\nconst[playerId,setPlayerId]=useState(\"\");// プレイヤーID\nconst navigate=useNavigate();const{user}=useAuth();// useAuthフックで認証状態を取得\n//#region ログイン状態\nuseEffect(()=>{if(user){setPlayerId(user.uid);// プレイヤーIDを設定\n// ログイン済みユーザーならFirebaseからプレイヤー名を取得\nif(user.isAnonymous){setPlayerName(\"ゲスト\");// 匿名ユーザーの場合はゲスト表示\n}else if(user.displayName){setPlayerName(user.displayName);// 名前が登録されている場合は表示\n}else{setPlayerName(user.email||\"\");// 名前がない場合はメールアドレスを表示\n}}},[user]);// ログアウト処理\nconst handleLogout=async()=>{try{await signOut(auth);alert(\"ログアウトしました\");navigate(\"/login\");// ログアウト後にログイン画面にリダイレクト\n}catch(error){console.error(\"ログアウトエラー:\",error);}};//#endregion\n//#region プレイヤーネーム\nconst[isEditingName,setIsEditingName]=useState(false);// 名前編集モード\nconst[newName,setNewName]=useState(\"\");// 新しい名前\n// ユーザー情報が変わるたびにプレイヤーネームを更新\nuseEffect(()=>{if(user){const displayName=user.displayName||(user.isAnonymous?\"ゲスト\":user.email||\"\");setPlayerName(displayName);// 既存のプレイヤーネームを設定\nsetNewName(displayName);// 名前編集用のテキストフィールドにも設定\n}},[user]);// 名前変更ボタンを押した時の処理\nconst handleNameChangeClick=()=>{setIsEditingName(!isEditingName);// 編集モードのオン/オフを切り替え\n};// 名前を更新する処理\nconst handleNameSubmit=async()=>{if(user&&newName){try{//FIXME - updateProfile関数の実装が必要\n// await updateProfile(user, { displayName: newName }); // Firebaseで名前を更新\nsetPlayerName(newName);// 画面上の名前を更新\nsetIsEditingName(false);// 編集モードを終了\n}catch(error){console.error(\"名前の更新に失敗しました:\",error);}}};//#endregion\n//#region マッチング\nconst[isMatching,setIsMatching]=useState(false);// マッチング開始処理\nconst startMatch=async()=>{try{const player={id:playerId,// プレイヤーID\nname:playerName,rating:score,bot:{prompt:aiPrompt,model:AIModel.default}};const result=await requestMatch(player);// サーバーレス関数でマッチングリクエスト\nif(result.roomId){setRoomId(result.roomId);// ルームIDを保存\nif(result.startBattle){//バトル開始\nconst roomData=getRoomData(result.roomId);navigate(`/battle/${roomId}`,{state:{roomData:roomData}});}else{//ホスト\nsetIsMatching(true);// マッチング状態を設定\n}}else{console.error(\"マッチングエラー1\");setIsMatching(false);}}catch(error){console.error(\"マッチングエラー2:\",error);setIsMatching(false);// エラー発生時にマッチング状態を解除\n}};// マッチングキャンセル処理\nconst handleCancelMatch=async()=>{setIsMatching(false);// マッチング状態を解除\nsetRoomId(null);// ルームIDをクリア\ntry{const result=await cancelMatch();// サーバーレス関数でキャンセル\nconsole.log(result.message);}catch(error){console.error(\"キャンセルエラー:\",error);}};//ルーム監視\nuseEffect(()=>{if(isMatching&&roomId){// ルームIDが設定されている場合、ルームのデータを監視\nonRoomUpdate(roomId,roomData=>{if(roomData&&roomData.player2){// player2が設定されたらマッチング成立とみなす\nconsole.log(\"Match found with opponent:\",roomData.player2);navigate(`/battle/${roomId}`,{state:{matchData:roomData,myData:{playerName}}});}else if(!roomData){// ルームが削除された場合\nconsole.error(\"ルームが削除されました。マッチングがキャンセルされた可能性があります。\");cancelMatch();// マッチングをキャンセル\nsetIsMatching(false);alert(\"マッチングがキャンセルされました。\");}});}},[roomId,navigate,playerName,isMatching]);// 画面が閉じられるかリロードされた場合にマッチングをキャンセル\nuseEffect(()=>{const handleBeforeUnload=async event=>{if(isMatching){await cancelMatch();// マッチングが進行中ならキャンセル\nevent.preventDefault();event.returnValue=\"\";// ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n}};window.addEventListener(\"beforeunload\",handleBeforeUnload);return()=>{window.removeEventListener(\"beforeunload\",handleBeforeUnload);// クリーンアップ\n};},[isMatching]);//#endregion\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u30DB\\u30FC\\u30E0\"}),user?/*#__PURE__*/_jsxs(\"div\",{children:[!user.isAnonymous&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u3053\\u3093\\u306B\\u3061\\u306F\\u3001\",playerName,\"\\u3055\\u3093\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNameChangeClick,children:isEditingName?\"キャンセル\":\"名前変更\"}),isEditingName&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newName,onChange:e=>setNewName(e.target.value)// テキストフィールドの値を更新\n,placeholder:\"\\u65B0\\u3057\\u3044\\u540D\\u524D\\u3092\\u5165\\u529B\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNameSubmit,children:\"\\u540D\\u524D\\u3092\\u4FDD\\u5B58\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/login\"),children:\"\\u30ED\\u30B0\\u30A4\\u30F3\"}),\" \"]}),user&&!user.isAnonymous?null:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"PlayerName: \\u30B2\\u30B9\\u30C8\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",score]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"AI\\u30D7\\u30ED\\u30F3\\u30D7\\u30C8:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:aiPrompt,onChange:e=>setAiPrompt(e.target.value)})]})}),isMatching?/*#__PURE__*/_jsx(\"button\",{onClick:handleCancelMatch,children:\"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"})// マッチングキャンセルボタン\n:/*#__PURE__*/_jsx(\"button\",{onClick:startMatch,children:\"Start Matching\"})// マッチング開始ボタン\n,isMatching?/*#__PURE__*/_jsx(\"p\",{children:\"\\\"Matching ...\\\"\"}):/*#__PURE__*/_jsx(\"p\",{})]});};export default HomeView;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","onRoomUpdate","getRoomData","requestMatch","cancelMatch","useAuth","signOut","auth","AIModel","jsx","_jsx","jsxs","_jsxs","HomeView","score","setScore","aiPrompt","setAiPrompt","roomId","setRoomId","playerName","setPlayerName","playerId","setPlayerId","navigate","user","uid","isAnonymous","displayName","email","handleLogout","alert","error","console","isEditingName","setIsEditingName","newName","setNewName","handleNameChangeClick","handleNameSubmit","isMatching","setIsMatching","startMatch","player","id","name","rating","bot","prompt","model","default","result","startBattle","roomData","state","handleCancelMatch","log","message","player2","matchData","myData","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","children","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/HomeView.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  onRoomUpdate,\n  getRoomData,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  requestMatch,\n  cancelMatch,\n} from \"../services/firebase-functions-client.ts\"; // Firebase Functionsの呼び出しをインポート\n\nimport { useAuth } from \"../services/useAuth.tsx\"; // useAuthフックをインポート\nimport { signOut } from \"firebase/auth\"; // Firebaseのログアウト機能をインポート\nimport { auth } from \"../services/firebase_f.ts\"; // Firebaseの認証インスタンスをインポート\n\nimport { AIModel, PlayerData } from \"../shared/types.ts\";\n\nconst HomeView: React.FC = () => {\n  const [score, setScore] = useState<number>(9999);\n  const [aiPrompt, setAiPrompt] = useState<string>(\"Input AI prompt here\");\n  const [roomId, setRoomId] = useState<string | null>(null); // ルームID\n  const [playerName, setPlayerName] = useState<string>(\"\"); // プレイヤーネームを保持\n  const [playerId, setPlayerId] = useState<string>(\"\"); // プレイヤーID\n\n  const navigate = useNavigate();\n  const { user } = useAuth(); // useAuthフックで認証状態を取得\n\n  //#region ログイン状態\n  useEffect(() => {\n    if (user) {\n      setPlayerId(user.uid); // プレイヤーIDを設定\n      // ログイン済みユーザーならFirebaseからプレイヤー名を取得\n      if (user.isAnonymous) {\n        setPlayerName(\"ゲスト\"); // 匿名ユーザーの場合はゲスト表示\n      } else if (user.displayName) {\n        setPlayerName(user.displayName); // 名前が登録されている場合は表示\n      } else {\n        setPlayerName(user.email || \"\"); // 名前がない場合はメールアドレスを表示\n      }\n    }\n  }, [user]);\n\n  // ログアウト処理\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      alert(\"ログアウトしました\");\n      navigate(\"/login\"); // ログアウト後にログイン画面にリダイレクト\n    } catch (error) {\n      console.error(\"ログアウトエラー:\", error);\n    }\n  };\n  //#endregion\n\n  //#region プレイヤーネーム\n  const [isEditingName, setIsEditingName] = useState<boolean>(false); // 名前編集モード\n  const [newName, setNewName] = useState<string>(\"\"); // 新しい名前\n  // ユーザー情報が変わるたびにプレイヤーネームを更新\n  useEffect(() => {\n    if (user) {\n      const displayName =\n        user.displayName || (user.isAnonymous ? \"ゲスト\" : user.email || \"\");\n      setPlayerName(displayName); // 既存のプレイヤーネームを設定\n      setNewName(displayName); // 名前編集用のテキストフィールドにも設定\n    }\n  }, [user]);\n\n  // 名前変更ボタンを押した時の処理\n  const handleNameChangeClick = () => {\n    setIsEditingName(!isEditingName); // 編集モードのオン/オフを切り替え\n  };\n\n  // 名前を更新する処理\n  const handleNameSubmit = async () => {\n    if (user && newName) {\n      try {\n        //FIXME - updateProfile関数の実装が必要\n        // await updateProfile(user, { displayName: newName }); // Firebaseで名前を更新\n        setPlayerName(newName); // 画面上の名前を更新\n        setIsEditingName(false); // 編集モードを終了\n      } catch (error) {\n        console.error(\"名前の更新に失敗しました:\", error);\n      }\n    }\n  };\n\n  //#endregion\n\n  //#region マッチング\n  const [isMatching, setIsMatching] = useState<boolean>(false);\n  // マッチング開始処理\n  const startMatch = async () => {\n    try {\n      const player: PlayerData = {\n        id: playerId, // プレイヤーID\n        name: playerName,\n        rating: score,\n        bot: { prompt: aiPrompt, model: AIModel.default },\n      };\n      const result = await requestMatch(player); // サーバーレス関数でマッチングリクエスト\n      if (result.roomId) {\n        setRoomId(result.roomId); // ルームIDを保存\n        if (result.startBattle) {\n          //バトル開始\n          const roomData = getRoomData(result.roomId);\n          navigate(`/battle/${roomId}`, {\n            state: { roomData: roomData },\n          });\n        } else {\n          //ホスト\n          setIsMatching(true); // マッチング状態を設定\n        }\n      } else {\n        console.error(\"マッチングエラー1\");\n        setIsMatching(false);\n      }\n    } catch (error) {\n      console.error(\"マッチングエラー2:\", error);\n      setIsMatching(false); // エラー発生時にマッチング状態を解除\n    }\n  };\n\n  // マッチングキャンセル処理\n  const handleCancelMatch = async () => {\n    setIsMatching(false); // マッチング状態を解除\n    setRoomId(null); // ルームIDをクリア\n    try {\n      const result = await cancelMatch(); // サーバーレス関数でキャンセル\n      console.log(result.message);\n    } catch (error) {\n      console.error(\"キャンセルエラー:\", error);\n    }\n  };\n\n  //ルーム監視\n  useEffect(() => {\n    if (isMatching && roomId) {\n      // ルームIDが設定されている場合、ルームのデータを監視\n      onRoomUpdate(roomId, (roomData) => {\n        if (roomData && roomData.player2) {\n          // player2が設定されたらマッチング成立とみなす\n          console.log(\"Match found with opponent:\", roomData.player2);\n          navigate(`/battle/${roomId}`, {\n            state: { matchData: roomData, myData: { playerName } },\n          });\n        } else if (!roomData) {\n          // ルームが削除された場合\n          console.error(\n            \"ルームが削除されました。マッチングがキャンセルされた可能性があります。\"\n          );\n          cancelMatch(); // マッチングをキャンセル\n          setIsMatching(false);\n          alert(\"マッチングがキャンセルされました。\");\n        }\n      });\n    }\n  }, [roomId, navigate, playerName, isMatching]);\n\n  // 画面が閉じられるかリロードされた場合にマッチングをキャンセル\n  useEffect(() => {\n    const handleBeforeUnload = async (event: BeforeUnloadEvent) => {\n      if (isMatching) {\n        await cancelMatch(); // マッチングが進行中ならキャンセル\n        event.preventDefault();\n        event.returnValue = \"\"; // ブラウザに確認メッセージを表示（ユーザーが手動で中止できる）\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload); // クリーンアップ\n    };\n  }, [isMatching]);\n\n  //#endregion\n\n  return (\n    <div>\n      <h1>ホーム</h1>\n      {user ? (\n        <div>\n          {/* ゲストユーザー（匿名）ではない場合に名前を表示 */}\n          {!user.isAnonymous && (\n            <div>\n              <p>こんにちは、{playerName}さん</p>\n              <button onClick={handleNameChangeClick}>\n                {isEditingName ? \"キャンセル\" : \"名前変更\"}\n              </button>\n\n              {/* 名前編集モード時にのみテキストフィールドを表示 */}\n              {isEditingName && (\n                <div>\n                  <input\n                    type=\"text\"\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)} // テキストフィールドの値を更新\n                    placeholder=\"新しい名前を入力\"\n                  />\n                  <button onClick={handleNameSubmit}>名前を保存</button>\n                </div>\n              )}\n            </div>\n          )}\n          <button onClick={handleLogout}>ログアウト</button>\n        </div>\n      ) : (\n        <div>\n          <button onClick={() => navigate(\"/login\")}>ログイン</button>{\" \"}\n          {/* ログインボタン */}\n        </div>\n      )}\n\n      {/* プレイヤーネームの入力はログイン済みユーザーのみ表示 */}\n      {user && !user.isAnonymous ? null : (\n        <div>\n          <p>PlayerName: ゲスト</p>\n        </div>\n      )}\n\n      <p>Score: {score}</p>\n      <div>\n        <label>\n          AIプロンプト:\n          <input\n            type=\"text\"\n            value={aiPrompt}\n            onChange={(e) => setAiPrompt(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {/* マッチング中にキャンセルボタンを表示 */}\n      {isMatching ? (\n        <button onClick={handleCancelMatch}>キャンセル</button> // マッチングキャンセルボタン\n      ) : (\n        <button onClick={startMatch}>Start Matching</button> // マッチング開始ボタン\n      )}\n      {isMatching ? <p>\"Matching ...\"</p> : <p></p>}\n    </div>\n  );\n};\n\nexport default HomeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}