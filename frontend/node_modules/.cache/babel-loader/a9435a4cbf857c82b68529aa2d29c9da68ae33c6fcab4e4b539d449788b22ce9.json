{"ast":null,"code":"var _jsxFileName = \"/Users/ryotarooda/Desktop/\\u5352\\u8AD6/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { sendMessage, onMessageAdded, sendAnswer, checkAnswers, onResultUpdated } from \"../services/firebase-realtime-database.ts\";\nimport { useAuth } from \"../services/useAuth.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleView = () => {\n  _s();\n  //#region init\n  const [isViewLoaded, setIsLoaded] = useState(false);\n  const {\n    roomId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const myId = (user === null || user === void 0 ? void 0 : user.uid) || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state = location.state.roomData;\n  const playersKey = Object.keys(state.players);\n  const isHost = myId === state.players[0].id;\n  // const isHost = myId === state.players[playersKey[0]].id;\n\n  const myData = isHost ? state.players[playersKey[0]] : state.players[playersKey[1]];\n  const opponentData = isHost ? state.players[playersKey[1]] : state.players[playersKey[0]];\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n\n  //#endregion\n\n  // Player names mapping\n  const playerNames = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name\n  };\n  const [chatLog, setChatLog] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isMyTurn, setIsMyTurn] = useState(isHost); // Initial turn state (placeholder)\n  const [remainTurn, setRemainTurn] = useState(state.battleConfig.maxTurn);\n  const [remainingTime, setRemainingTime] = useState(battleConfig.oneTurnTime);\n  const [answer, setAnswer] = useState({\n    playerId: myId,\n    identity: true,\n    select: null,\n    message: \"\"\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // ViewDidLoad\n  useEffect(() => {\n    setIsLoaded(true);\n  }, [battleConfig]);\n  useEffect(() => {\n    if (roomId && isViewLoaded) {\n      // ターン更新をFirebaseから受け取る\n      onMessageAdded(roomId, newMessage => {\n        console.log(\"onMessageAdded:\", newMessage);\n        setChatLog(prevChatLog => [...prevChatLog, {\n          senderId: newMessage.senderId,\n          message: newMessage.message\n        }]);\n      });\n    }\n  }, [roomId, isViewLoaded]);\n\n  //メッセージ受信時\n  useEffect(() => {\n    if (isViewLoaded) {\n      setIsMyTurn(prevTurn => !prevTurn);\n      setRemainTurn(prevCount => prevCount - 1);\n    }\n  }, [chatLog]);\n\n  // バトル終了時\n  useEffect(() => {\n    if (remainTurn === 0) {\n      // alert(\"Battle Ended!\");\n    }\n  }, [remainTurn]);\n\n  //#region ui\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId && remainTurn > 0) {\n      setMessage(\"送信中...\");\n      await sendMessage(roomId, message);\n      setMessage(\"\");\n    }\n  };\n\n  // 回答を送信\n  const handleSubmit = async () => {\n    if (answer.select === null || !answer.identity || !roomId || !myId) {\n      console.error(\"Invalid answer data\");\n      return;\n    }\n    sendAnswer(roomId, answer);\n    setIsSubmitted(true);\n\n    //両回答が揃ったら結果を確認\n    if (isHost) {\n      checkAnswers(roomId);\n    }\n    console.log(\"入力が送信されました\");\n  };\n\n  //リザルトを監視\n  useEffect(() => {\n    if (isSubmitted && roomId) {\n      const unsubscribe = onResultUpdated(roomId, result => {\n        console.log(\"Result updated:\", result);\n        if (result) {\n          console.log(\"Battle finished!\");\n\n          // バトル終了時の処理\n          alert(\"バトルが終了しました。\");\n        }\n      });\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [isSubmitted]);\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5BFE\\u6226\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u30ED\\u30B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [playerNames[msg.senderId] || \"Unknown\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6B8B\\u308A\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u6570: \", remainTurn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u3053\\u306E\\u30BF\\u30FC\\u30F3\\u306E\\u6B8B\\u308A\\u6642\\u9593: \", remainingTime, \"\\u79D2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30BF\\u30FC\\u30F3\\u30D7\\u30EC\\u30FC\\u30E4\\u30FC: \", isMyTurn ? \"あなた\" : \"相手\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u76F8\\u624B: \", opponentData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: remainTurn <= 0 || !isMyTurn,\n        children: isMyTurn || message === \"送信中...\" ? \"送信\" : \"Wait for your turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), remainTurn === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u30C1\\u30E3\\u30C3\\u30C8\\u76F8\\u624B\\u306F\\uFF1F:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setAnswer(prevAnswer => ({\n            ...prevAnswer,\n            select: e.target.value === \"true\"\n          })),\n          value: answer.select !== null ? String(answer.select) : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u9078\\u3093\\u3067\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"\\u4EBA\\u9593\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u7406\\u7531:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: answer.message,\n          onChange: e => setAnswer(prevAnswer => ({\n            ...prevAnswer,\n            message: e.target.value\n          })),\n          placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: isSubmitted,\n        children: isSubmitted ? \"送信完了\" : \"送信\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/result\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishMatching,\n        children: \"\\u30D0\\u30C8\\u30EB\\u7D42\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n\n  //#endregion\n};\n_s(BattleView, \"SfZDA/E0Os9Tpz/rmLqnk569pj8=\", false, function () {\n  return [useParams, useAuth, useLocation];\n});\n_c = BattleView;\nexport default BattleView;\nvar _c;\n$RefreshReg$(_c, \"BattleView\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useParams","sendMessage","onMessageAdded","sendAnswer","checkAnswers","onResultUpdated","useAuth","jsxDEV","_jsxDEV","BattleView","_s","isViewLoaded","setIsLoaded","roomId","user","myId","uid","location","state","roomData","playersKey","Object","keys","players","isHost","id","myData","opponentData","myName","name","battleConfig","playerNames","chatLog","setChatLog","message","setMessage","isMyTurn","setIsMyTurn","remainTurn","setRemainTurn","maxTurn","remainingTime","setRemainingTime","oneTurnTime","answer","setAnswer","playerId","identity","select","isSubmitted","setIsSubmitted","newMessage","console","log","prevChatLog","senderId","prevTurn","prevCount","handleSendMessage","trim","handleSubmit","error","unsubscribe","result","alert","handleFinishMatching","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","disabled","prevAnswer","String","to","_c","$RefreshReg$"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/views/BattleView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport {\n  sendMessage,\n  onMessageAdded,\n  sendAnswer,\n  checkAnswers,\n  onResultUpdated,\n} from \"../services/firebase-realtime-database.ts\";\nimport {\n  BattleLog,\n  PlayerData,\n  RoomData,\n  SubmitAnswer,\n} from \"shared/dist/types\";\nimport { useAuth } from \"../services/useAuth.tsx\";\n\nconst BattleView: React.FC = () => {\n  //#region init\n  const [isViewLoaded, setIsLoaded] = useState<boolean>(false);\n  const { roomId } = useParams<{ roomId: string }>();\n\n  const { user } = useAuth();\n  const myId = user?.uid || \"error\";\n\n  // Location and Params\n  const location = useLocation();\n  const state: RoomData = location.state.roomData;\n  const playersKey = Object.keys(state.players);\n  const isHost = myId === state.players[0].id;\n  // const isHost = myId === state.players[playersKey[0]].id;\n\n  const myData: PlayerData = isHost\n    ? state.players[playersKey[0]]\n    : state.players[playersKey[1]];\n  const opponentData: PlayerData = isHost\n    ? state.players[playersKey[1]]\n    : state.players[playersKey[0]];\n\n  // Player Information\n  const myName = `${myData.name} (あなた)` || \"error\";\n\n  // Battle Configuration\n  const battleConfig = state.battleConfig;\n\n  //#endregion\n\n  // Player names mapping\n  const playerNames: Record<string, string> = {\n    [myId]: myName,\n    [opponentData.id]: opponentData.name,\n  };\n  const [chatLog, setChatLog] = useState<\n    { senderId: string; message: string }[]\n  >([]);\n  const [message, setMessage] = useState<string>(\"\");\n  const [isMyTurn, setIsMyTurn] = useState<boolean>(isHost); // Initial turn state (placeholder)\n  const [remainTurn, setRemainTurn] = useState<number>(\n    state.battleConfig.maxTurn\n  );\n  const [remainingTime, setRemainingTime] = useState<number>(\n    battleConfig.oneTurnTime\n  );\n\n  const [answer, setAnswer] = useState<SubmitAnswer>({\n    playerId: myId,\n    identity: true,\n    select: null,\n    message: \"\",\n  });\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n\n  // ViewDidLoad\n  useEffect(() => {\n    setIsLoaded(true);\n  }, [battleConfig]);\n\n  useEffect(() => {\n    if (roomId && isViewLoaded) {\n      // ターン更新をFirebaseから受け取る\n      onMessageAdded(roomId, (newMessage) => {\n        console.log(\"onMessageAdded:\", newMessage);\n        setChatLog((prevChatLog) => [\n          ...prevChatLog,\n          { senderId: newMessage.senderId, message: newMessage.message },\n        ]);\n      });\n    }\n  }, [roomId, isViewLoaded]);\n\n  //メッセージ受信時\n  useEffect(() => {\n    if (isViewLoaded) {\n      setIsMyTurn((prevTurn) => !prevTurn);\n      setRemainTurn((prevCount) => prevCount - 1);\n    }\n  }, [chatLog]);\n\n  // バトル終了時\n  useEffect(() => {\n    if (remainTurn === 0) {\n      // alert(\"Battle Ended!\");\n    }\n  }, [remainTurn]);\n\n  //#region ui\n  const handleSendMessage = async () => {\n    if (message.trim() && isMyTurn && roomId && remainTurn > 0) {\n      setMessage(\"送信中...\");\n      await sendMessage(roomId, message);\n      setMessage(\"\");\n    }\n  };\n\n  // 回答を送信\n  const handleSubmit = async () => {\n    if (answer.select === null || !answer.identity || !roomId || !myId) {\n      console.error(\"Invalid answer data\");\n      return;\n    }\n    sendAnswer(roomId, answer);\n    setIsSubmitted(true);\n\n    //両回答が揃ったら結果を確認\n    if (isHost) {\n      checkAnswers(roomId);\n    }\n    console.log(\"入力が送信されました\");\n  };\n\n  //リザルトを監視\n  useEffect(() => {\n    if (isSubmitted && roomId) {\n      const unsubscribe = onResultUpdated(roomId, (result) => {\n        console.log(\"Result updated:\", result);\n        if (result) {\n          console.log(\"Battle finished!\");\n\n          // バトル終了時の処理\n          alert(\"バトルが終了しました。\");\n        }\n      });\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [isSubmitted]);\n\n  const handleFinishMatching = () => {\n    console.log(\"Finishing battle...\");\n    // バトル終了のロジック\n  };\n\n  //html\n  return (\n    <div>\n      <h1>対戦画面</h1>\n      <p>ルームID: {roomId}</p>\n      <div>\n        <h2>チャットログ</h2>\n        <ul>\n          {chatLog.map((msg, index) => (\n            <li key={index}>\n              <strong>{playerNames[msg.senderId] || \"Unknown\"}:</strong>{\" \"}\n              {msg.message}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p>残りメッセージ数: {remainTurn}</p>\n      <p>このターンの残り時間: {remainingTime}秒</p>\n      <p>ターンプレーヤー: {isMyTurn ? \"あなた\" : \"相手\"}</p>\n      <p>相手: {opponentData.name}</p>\n      <div>\n        <label>\n          メッセージ:\n          <input\n            type=\"text\"\n            placeholder=\"Enter message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </label>\n        <button\n          onClick={handleSendMessage}\n          disabled={remainTurn <= 0 || !isMyTurn}\n        >\n          {isMyTurn || message === \"送信中...\" ? \"送信\" : \"Wait for your turn\"}\n        </button>\n      </div>\n      {remainTurn === 0 && (\n        <div>\n          <h2>バトル終了</h2>\n          <label>\n            チャット相手は？:\n            <select\n              onChange={(e) =>\n                setAnswer((prevAnswer) => ({\n                  ...prevAnswer,\n                  select: e.target.value === \"true\",\n                }))\n              }\n              value={answer.select !== null ? String(answer.select) : \"\"}\n            >\n              <option value=\"\">選んでください</option>\n              <option value=\"true\">人間</option>\n              <option value=\"false\">AI</option>\n            </select>\n          </label>\n          <label>\n            理由:\n            <input\n              type=\"text\"\n              value={answer.message}\n              onChange={(e) =>\n                setAnswer((prevAnswer) => ({\n                  ...prevAnswer,\n                  message: e.target.value,\n                }))\n              }\n              placeholder=\"メッセージを入力してください\"\n            />\n          </label>\n          <button onClick={handleSubmit} disabled={isSubmitted}>\n            {isSubmitted ? \"送信完了\" : \"送信\"}\n          </button>\n        </div>\n      )}\n      <Link to=\"/result\">\n        <button onClick={handleFinishMatching}>バトル終了</button>\n      </Link>\n    </div>\n  );\n\n  //#endregion\n};\n\nexport default BattleView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}