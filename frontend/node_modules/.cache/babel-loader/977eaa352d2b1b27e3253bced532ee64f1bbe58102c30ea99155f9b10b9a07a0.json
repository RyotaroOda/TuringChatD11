{"ast":null,"code":"// services/firebase-functions-client.ts\nimport { httpsCallable } from \"firebase/functions\";\nimport { auth, functions } from \"./firebase_f.ts\"; // Firebase初期化ファイルをインポート\n\nexport const testFunction = async () => {\n  const testFunction = httpsCallable(functions, \"testFunction\");\n  const result = await testFunction();\n  console.log(\"result\", result);\n  return \"result\";\n};\n\n// サーバーレス関数を使ってマッチングリクエストを送信する関数\nexport const requestMatch = async rating => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n  // const requestMatchFunction = httpsCallable<{ rating: number }, MatchResult>(\n  //   functions,\n  //   \"requestMatchFunction\"\n  // );\n  // console.log(\"requestMatchFunction wait\", requestMatchFunction);\n  // const result = await requestMatchFunction({ rating }); //FIXME:ここ！\n  // console.log(\"requestMatchFunction waited\");\n\n  const requestMatchFunction = httpsCallable(functions, \"requestMatchFunction\");\n  console.log(\"requestMatchFunction\", requestMatchFunction);\n  const jaison = await requestMatchFunction({\n    rating\n  }).then(result => {\n    const data = result.data;\n    console.log(\"data\", data);\n  }).catch(error => {\n    console.log(\"エラー\");\n    console.error(error);\n  });\n  console.log(\"requestMatchFunction fin\");\n  const result = {\n    roomId: \"test\",\n    opponentId: \"test\"\n  };\n  return result;\n};\n\n// サーバーレス関数を使ってマッチングキャンセルを行う関数\nexport const cancelMatch = async () => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n  const cancelMatchFunction = httpsCallable(functions, \"cancelMatchFunction\");\n  const result = await cancelMatchFunction();\n  return result.data;\n};","map":{"version":3,"names":["httpsCallable","auth","functions","testFunction","result","console","log","requestMatch","rating","user","currentUser","Error","requestMatchFunction","jaison","then","data","catch","error","roomId","opponentId","cancelMatch","cancelMatchFunction"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/turing-chat-d/turing-chat-d11/frontend/src/services/firebase-functions-client.ts"],"sourcesContent":["// services/firebase-functions-client.ts\nimport { httpsCallable } from \"firebase/functions\";\nimport { auth, functions } from \"./firebase_f.ts\"; // Firebase初期化ファイルをインポート\nimport { MatchResult } from \"../../../shared/types\";\n\nexport const testFunction = async (): Promise<string> => {\n  const testFunction = httpsCallable(functions, \"testFunction\");\n  const result = await testFunction();\n  console.log(\"result\", result);\n  return \"result\";\n};\n\n// サーバーレス関数を使ってマッチングリクエストを送信する関数\nexport const requestMatch = async (rating: number): Promise<MatchResult> => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n  // const requestMatchFunction = httpsCallable<{ rating: number }, MatchResult>(\n  //   functions,\n  //   \"requestMatchFunction\"\n  // );\n  // console.log(\"requestMatchFunction wait\", requestMatchFunction);\n  // const result = await requestMatchFunction({ rating }); //FIXME:ここ！\n  // console.log(\"requestMatchFunction waited\");\n\n  const requestMatchFunction = httpsCallable(functions, \"requestMatchFunction\");\n  console.log(\"requestMatchFunction\", requestMatchFunction);\n  const jaison = await requestMatchFunction({ rating })\n    .then((result) => {\n      const data = result.data;\n      console.log(\"data\", data);\n    })\n    .catch((error) => {\n      console.log(\"エラー\");\n      console.error(error);\n    });\n  console.log(\"requestMatchFunction fin\");\n  const result = { roomId: \"test\", opponentId: \"test\" };\n  return result;\n};\n\n// サーバーレス関数を使ってマッチングキャンセルを行う関数\nexport const cancelMatch = async (): Promise<MatchResult> => {\n  const user = auth.currentUser;\n  if (!user) {\n    throw new Error(\"ログインしていないユーザーです。\");\n  }\n\n  const cancelMatchFunction = httpsCallable<{ rating: number }, MatchResult>(\n    functions,\n    \"cancelMatchFunction\"\n  );\n  const result = await cancelMatchFunction();\n  return result.data;\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;;AAGnD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAA6B;EACvD,MAAMA,YAAY,GAAGH,aAAa,CAACE,SAAS,EAAE,cAAc,CAAC;EAC7D,MAAME,MAAM,GAAG,MAAMD,YAAY,CAAC,CAAC;EACnCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC7B,OAAO,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,MAAc,IAA2B;EAC1E,MAAMC,IAAI,GAAGR,IAAI,CAACS,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,oBAAoB,GAAGZ,aAAa,CAACE,SAAS,EAAE,sBAAsB,CAAC;EAC7EG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,oBAAoB,CAAC;EACzD,MAAMC,MAAM,GAAG,MAAMD,oBAAoB,CAAC;IAAEJ;EAAO,CAAC,CAAC,CAClDM,IAAI,CAAEV,MAAM,IAAK;IAChB,MAAMW,IAAI,GAAGX,MAAM,CAACW,IAAI;IACxBV,OAAO,CAACC,GAAG,CAAC,MAAM,EAAES,IAAI,CAAC;EAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBZ,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACY,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;EACJZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvC,MAAMF,MAAM,GAAG;IAAEc,MAAM,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAO,CAAC;EACrD,OAAOf,MAAM;AACf,CAAC;;AAED;AACA,OAAO,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAkC;EAC3D,MAAMX,IAAI,GAAGR,IAAI,CAACS,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,MAAMU,mBAAmB,GAAGrB,aAAa,CACvCE,SAAS,EACT,qBACF,CAAC;EACD,MAAME,MAAM,GAAG,MAAMiB,mBAAmB,CAAC,CAAC;EAC1C,OAAOjB,MAAM,CAACW,IAAI;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}